// <auto-generated />
using System;
using EmployeeTimeTracker.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmployeeTimeTracker.Migrations.TimeTracking
{
    [DbContext(typeof(EmployeeManagerTimeTrackContext))]
    [Migration("20200810134511_FKFixes")]
    partial class FKFixes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmployeeTimeTracker.Models.EmployeeInfo", b =>
                {
                    b.Property<int>("id_num")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_num")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int>("manager_id")
                        .HasColumnName("manager_id")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(90)")
                        .HasMaxLength(90)
                        .IsUnicode(false);

                    b.Property<string>("user_privileges")
                        .IsRequired()
                        .HasColumnName("user_privileges")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("id_num");

                    b.HasIndex("manager_id");

                    b.ToTable("EmployeeInfo");
                });

            modelBuilder.Entity("EmployeeTimeTracker.Models.EmployeeManager", b =>
                {
                    b.Property<int>("manager_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("manager_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(90)")
                        .HasMaxLength(90)
                        .IsUnicode(false);

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("manager_id");

                    b.ToTable("EmployeeManager");
                });

            modelBuilder.Entity("EmployeeTimeTracker.Models.TimeTrackings", b =>
                {
                    b.Property<int>("timer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("timer_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("date_of_work")
                        .HasColumnName("date_of_work")
                        .HasColumnType("date");

                    b.Property<int>("employee_init_id")
                        .HasColumnName("employee_init_id")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("time_in")
                        .HasColumnName("time_in")
                        .HasColumnType("time(0)");

                    b.Property<TimeSpan?>("time_out")
                        .HasColumnName("time_out")
                        .HasColumnType("time(0)");

                    b.HasKey("timer_id");

                    b.HasIndex("employee_init_id");

                    b.ToTable("TimeTrackings");
                });

            modelBuilder.Entity("EmployeeTimeTracker.Models.EmployeeInfo", b =>
                {
                    b.HasOne("EmployeeTimeTracker.Models.EmployeeManager", "EmployeeManag")
                        .WithMany("EmployeeInfo")
                        .HasForeignKey("manager_id")
                        .HasConstraintName("FK__Manager__emplo__31H62524")
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeTimeTracker.Models.TimeTrackings", b =>
                {
                    b.HasOne("EmployeeTimeTracker.Models.EmployeeInfo", "EmployeeInit")
                        .WithMany("TimeTrackings")
                        .HasForeignKey("employee_init_id")
                        .HasConstraintName("FK__TimeTrack__emplo__36B12243")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
