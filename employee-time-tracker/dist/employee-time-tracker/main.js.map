{"version":3,"sources":["./src/app/admin/admin.component.html","./src/app/app.component.html","./src/app/check-in/check-in.component.html","./src/app/employees-info/employee-info-list/employee-info-list.component.html","./src/app/employees-info/employee-info/employee-info.component.html","./src/app/employees-info/employees-info.component.html","./src/app/login/login.component.html","./src/app/time-tracking/time-tracking-list/time-tracking-list.component.html","./src/app/time-tracking/time-tracking.component.html","./src/app/time-tracking/user-time-tracking-list/user-time-tracking-list.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/admin/admin.component.css","./src/app/admin/admin.component.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/check-in/check-in.component.css","./src/app/check-in/check-in.component.ts","./src/app/employees-info/employee-info-list/employee-info-list.component.css","./src/app/employees-info/employee-info-list/employee-info-list.component.ts","./src/app/employees-info/employee-info/employee-info.component.css","./src/app/employees-info/employee-info/employee-info.component.ts","./src/app/employees-info/employees-info.component.css","./src/app/employees-info/employees-info.component.ts","./src/app/helpers/auth.guard.ts","./src/app/helpers/auth.interceptor.ts","./src/app/helpers/backend.ts","./src/app/helpers/error.interceptor.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/services/authentication.service.ts","./src/app/services/employee-info.service.ts","./src/app/services/time-track.service.ts","./src/app/time-tracking/time-tracking-list/time-tracking-list.component.css","./src/app/time-tracking/time-tracking-list/time-tracking-list.component.ts","./src/app/time-tracking/time-tracking.component.css","./src/app/time-tracking/time-tracking.component.ts","./src/app/time-tracking/user-time-tracking-list/user-time-tracking-list.component.css","./src/app/time-tracking/user-time-tracking-list/user-time-tracking-list.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export default \"<div class=\\\"container nav-container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-4\\\">\\r\\n            <button (click)=\\\" _toggleSidebar() \\\" class=\\\"float-left menuBtn\\\"><i class=\\\"fas fa-bars\\\"></i></button>\\r\\n        </div>\\r\\n        <div class=\\\"col-8\\\">\\r\\n            <h1 class=\\\"display-4 text-left \\\">Admin Dashboard</h1>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<hr>\\r\\n<ng-sidebar-container style=\\\"height: 100vh;\\\">\\r\\n    <!-- A sidebar -->\\r\\n    <ng-sidebar [(opened)]=\\\"_opened\\\" position=\\\"right\\\">\\r\\n        <ul>\\r\\n            <li><button class=\\\"btn btn-info menu-button\\\" (click)=\\\"showDiv.employees = !showDiv.employees;showDiv.timeData = false\\\">Employees</button></li>\\r\\n            <li><button class=\\\"btn btn-info menu-button\\\" (click)=\\\"showDiv.timeData = !showDiv.timeData;showDiv.employees = false\\\">Time Tracking</button></li>\\r\\n            <li><button class=\\\"btn btn-warning menu-button\\\" type=\\\"submit \\\" (click)=\\\"logoutUser() \\\">Logout</button></li>\\r\\n        </ul>\\r\\n    </ng-sidebar>\\r\\n\\r\\n    <!-- Page content -->\\r\\n    <div ng-sidebar-content>\\r\\n        <div class=\\\"jumbtron\\\" *ngIf=\\\"showDiv.employees\\\">\\r\\n\\r\\n            <h1 class=\\\"display-8 text-center \\\">Employees</h1>\\r\\n\\r\\n            <hr>\\r\\n            <div class=\\\"row \\\">\\r\\n                <div class=\\\"col-md-5 \\\">\\r\\n                    <app-employee-info></app-employee-info>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-7 \\\">\\r\\n                    <app-employee-info-list></app-employee-info-list>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"jumbtron\\\" *ngIf=\\\"showDiv.timeData\\\">\\r\\n            <h1 class=\\\"display-8 text-center \\\">Time Tracking</h1>\\r\\n            <hr>\\r\\n            <div class=\\\"row \\\">\\r\\n                <div class=\\\"col-md-5 \\\">\\r\\n                    <app-time-tracking>\\r\\n                    </app-time-tracking>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-7 \\\">\\r\\n                    <app-time-tracking-list>\\r\\n                    </app-time-tracking-list>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</ng-sidebar-container>\";","export default \"<router-outlet></router-outlet>\";","export default \"<form #checkInForm=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(checkInForm)\\\">\\r\\n    <input type=\\\"hidden\\\" name=\\\"timer_id\\\" [value]=\\\"timeService.timeFormData.timer_id\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <!-- employee_init_id Form Input -->\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text bg-white\\\">\\r\\n                    <i class=\\\"far fa-id-badge\\\" [class.green-icon]=\\\"employee_init_id.valid\\\" [class.red-icon]=\\\"employee_init_id.invalid && employee_init_id.touched\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <input name=\\\"employee_init_id\\\" id=\\\"employee_init_id\\\" #employee_init_id=\\\"ngModel\\\" [(ngModel)]=\\\"timeService.timeFormData.employee_init_id\\\" class=\\\"form-control\\\" required disabled>\\r\\n        </div>\\r\\n        <!-- date_of_work Form Input -->\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text bg-white\\\">\\r\\n                    <i class=\\\"far fa-calendar-alt\\\" [class.green-icon]=\\\"date_of_work.valid\\\" [class.red-icon]=\\\"date_of_work.invalid && date_of_work.touched\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <input name=\\\"date_of_work\\\" id=\\\"date_of_work\\\" #date_of_work=\\\"ngModel\\\" [(ngModel)]=\\\"timeService.timeFormData.date_of_work\\\" class=\\\"form-control\\\" placeholder=\\\"YYYY-MM-DD\\\" required disabled>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-md-6\\\"> \\r\\n            <!-- time_in Form Input -->\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <div class=\\\"input-group-text bg-white\\\">\\r\\n                        <!-- **Find icon here** -->\\r\\n                        <i class=\\\"far fa-clock\\\" [class.green-icon]=\\\"time_in.valid\\\" [class.red-icon]=\\\"time_in.invalid && time_in.touched\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <input name=\\\"time_in\\\" id=\\\"time_in\\\" #time_in=\\\"ngModel\\\" [(ngModel)]=\\\"timeService.timeFormData.time_in\\\" class=\\\"form-control\\\" placeholder=\\\"Employee Start Time\\\" required disabled>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-6\\\">\\r\\n            <!-- time_out Form Input -->\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <div class=\\\"input-group-text bg-white\\\">\\r\\n                        <!-- **Find icon here** -->\\r\\n                        <i class=\\\"far fa-clock\\\" [class.green-icon]=\\\"time_out.valid\\\" [class.red-icon]=\\\"time_out.invalid && time_out.touched\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <input name=\\\"time_out\\\" id=\\\"time_out\\\" #time_out=\\\"ngModel\\\" [(ngModel)]=\\\"timeService.timeFormData.time_out\\\" class=\\\"form-control\\\" placeholder=\\\"Employee End Time\\\" disabled>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"clockedIn\\\">Clock-In</button>\\r\\n        <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"button\\\" (click)=\\\"clockOut(checkInForm)\\\" [disabled]=\\\"!clockedIn\\\">Clock-Out</button>\\r\\n    </div>\\r\\n</form>\";","export default \"<table class=\\\"table table-hover\\\">\\r\\n    <tr>\\r\\n        <td>ID</td>\\r\\n        <td>First Name</td>\\r\\n        <td>Last Name</td>\\r\\n        <td>User Privileges</td>\\r\\n        <td>Username</td>\\r\\n        <td>Password</td>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let pd of service.list\\\">\\r\\n        <td (click)=\\\"populateForm(pd)\\\">{{ pd.id_num }}</td>\\r\\n        <td (click)=\\\"populateForm(pd)\\\">{{ pd.first_name }}</td>\\r\\n        <td (click)=\\\"populateForm(pd)\\\">{{ pd.last_name }}</td>\\r\\n        <td (click)=\\\"populateForm(pd)\\\">{{ pd.user_privileges }}</td>\\r\\n        <td (click)=\\\"populateForm(pd)\\\">{{ pd.username }}</td>\\r\\n        <td (click)=\\\"populateForm(pd)\\\">{{ pd.password }}</td>\\r\\n        <td>\\r\\n            <i class=\\\"far fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(pd.id_num)\\\"></i>\\r\\n        </td>\\r\\n    </tr> \\r\\n</table>\";","export default \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\" class=\\\"inputForm\\\">\\r\\n    <input type=\\\"hidden\\\" name=\\\"id_num\\\" [value]=\\\"service.formData.id_num\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <!-- First Name Form Input -->\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text bg-white\\\">\\r\\n                    <i class=\\\"fas fa-user-circle\\\" [class.green-icon]=\\\"first_name.valid\\\" [class.red-icon]=\\\"first_name.invalid && first_name.touched\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <input name=\\\"first_name\\\" #first_name=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.first_name\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\" required>\\r\\n        </div>\\r\\n        <!-- Last Name Form Input --> \\r\\n        <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text bg-white\\\">\\r\\n                    <i class=\\\"fas fa-user-circle\\\" [class.green-icon]=\\\"last_name.valid\\\" [class.red-icon]=\\\"last_name.invalid && last_name.touched\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <input name=\\\"last_name\\\" #last_name=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.last_name\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name\\\" required>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <!-- User Privileges Form Input -->\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text bg-white\\\">\\r\\n                    <!-- **Find icon here** -->\\r\\n                    <i class=\\\"fas fa-user-shield\\\" [class.green-icon]=\\\"user_privileges.valid\\\" [class.red-icon]=\\\"user_privileges.invalid && user_privileges.touched\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <select name=\\\"user_privileges\\\" #user_privileges=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.user_privileges\\\" class=\\\"form-control\\\" required>\\r\\n                <option value=\\\"\\\" selected disabled>Choose Role</option>\\r\\n                <option value=\\\"Admin\\\">Admin</option>\\r\\n                <option value=\\\"User\\\">User</option>\\r\\n            </select>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-md-6\\\">\\r\\n            <!-- Username Form Input -->\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <div class=\\\"input-group-text bg-white\\\">\\r\\n                        <!-- **Find icon here** -->\\r\\n                        <i class=\\\"far fa-user\\\" [class.green-icon]=\\\"username.valid\\\" [class.red-icon]=\\\"username.invalid && username.touched\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <input name=\\\"username\\\" #username=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.username\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" required>\\r\\n                <span class=\\\"error text-danger\\\" *ngIf=\\\"!isNewUsernameUnique(usernames, username.value)\\\"><p id=\\\"username_error\\\">The Username is not unique!  Please choose another.</p></span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-6\\\">\\r\\n            <!-- Password Form Input -->\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <div class=\\\"input-group-text bg-white\\\">\\r\\n                        <i class=\\\"fas fa-key\\\" [class.green-icon]=\\\"password.valid\\\" [class.red-icon]=\\\"password.invalid && password.touched\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <input [type]=\\\"hide ? 'password' : 'text'\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" userPassword required>\\r\\n                <div class=\\\"input-group-append\\\">\\r\\n                    <span class=\\\"input-group-text\\\" (click)=\\\"hide = !hide\\\" [innerHTML]=\\\"hide ? visibleEye : invisibleEye\\\"></span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid || !isNewUsernameUnique(usernames, username.value)\\\"><i class=\\\"fas fa-database\\\"></i> Submit</button>\\r\\n        <button class=\\\"btn btn-warning btn-lg btn-block refresh\\\" type=\\\"button\\\" (click)=\\\"form.reset()\\\"><i class=\\\"fas fa-sync-alt\\\"></i> Restart</button>\\r\\n    </div>\\r\\n</form>\";","export default \"<div class=\\\"container nav-container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-4\\\">\\r\\n            <button (click)=\\\" _toggleSidebar() \\\" class=\\\"float-left menuBtn\\\"><i class=\\\"fas fa-bars\\\"></i></button>\\r\\n        </div>\\r\\n        <div class=\\\"col-8\\\">\\r\\n            <h1 class=\\\"display-4 text-left\\\">User Dashboard</h1>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<hr>\\r\\n<ng-sidebar-container style=\\\"height: 100vh;\\\">\\r\\n    <!-- A sidebar -->\\r\\n    <ng-sidebar [(opened)]=\\\"_opened\\\" position=\\\"right\\\">\\r\\n        <ul>\\r\\n            <li><button class=\\\"btn btn-info menu-button\\\" (click)=\\\"showDiv.timeData = !showDiv.timeData;showDiv.employees = false\\\">Time Tracking</button></li>\\r\\n            <li><button class=\\\"btn btn-warning menu-button\\\" type=\\\"submit \\\" (click)=\\\"logoutUser() \\\">Logout</button></li>\\r\\n        </ul>\\r\\n    </ng-sidebar>\\r\\n\\r\\n    <!-- Page content -->\\r\\n    <div ng-sidebar-content>\\r\\n        <div class=\\\"jumbtron\\\" *ngIf=\\\"showDiv.timeData\\\">\\r\\n            <h1 class=\\\"display-8 text-center \\\">Time Tracking</h1>\\r\\n            <div class=\\\"row \\\">\\r\\n                <div class=\\\"col-md-5 \\\">\\r\\n                    <app-check-in>\\r\\n                    </app-check-in>\\r\\n                    <div class=\\\"check-in-message\\\"></div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-7 \\\">\\r\\n                    <app-user-time-tracking-list>\\r\\n                    </app-user-time-tracking-list>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-sidebar-container>\";","export default \"<div class=\\\"col-md-6 offset-md-3 mt-5\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <h4 class=\\\"card-header\\\">Employee Tracker</h4>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <form [formGroup]=\\\"loginForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(loginForm)\\\">\\r\\n                <!--Username-->\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"username\\\">Username</label>\\r\\n                    <input name=\\\"username\\\" formControlName=\\\"username\\\" [ngClass]=\\\"{ 'is-invalid': submitted && formInput.username.errors }\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" required>\\r\\n                    <div *ngIf=\\\"submitted && formInput.username.errors\\\" class=\\\"invalid-feedback \\\">\\r\\n                        <div *ngIf=\\\"formInput.username.errors.required\\\">Username is required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!--Password-->\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"password\\\">Password</label>\\r\\n                    <div class=\\\"input-group\\\">\\r\\n                        <input [type]=\\\"hide ? 'password' : 'text'\\\" name=\\\"password\\\" formControlName=\\\"password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && formInput.password.errors }\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required>\\r\\n                        <div class=\\\"input-group-append\\\">\\r\\n                            <span class=\\\"input-group-text\\\" (click)=\\\"hide = !hide\\\" [innerHTML]=\\\"hide ? visibleEye : invisibleEye\\\"></span>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"submitted && formInput.password.errors\\\" class=\\\"invalid-feedback \\\">\\r\\n                            <div *ngIf=\\\"formInput.password.errors.required\\\">Password is required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <button [disabled]=\\\"loading \\\" routerLink=\\\"employees-info/employees-info\\\" routerLinkActive=\\\"active\\\" class=\\\"btn btn-primary\\\">\\r\\n                    <span *ngIf=\\\"loading \\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n                    Login\\r\\n                </button>\\r\\n                <div *ngIf=\\\"errStr\\\" class=\\\"alert alert-danger mt-3 mb-0 \\\">{{ errStr }}</div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<table class=\\\"table table-hover\\\">\\r\\n    <tr>\\r\\n        <td>Timer ID</td>\\r\\n        <td>Date</td>\\r\\n        <td>Start Time</td>\\r\\n        <td>End Time</td>\\r\\n        <td>Employee ID</td>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let ts of timeService.timeList\\\">\\r\\n        <td (click)=\\\"populateForm(ts)\\\">{{ ts.timer_id }}</td>\\r\\n        <td (click)=\\\"populateForm(ts)\\\">{{ ts.date_of_work.substring(0,10) }}</td>\\r\\n        <td (click)=\\\"populateForm(ts)\\\">{{ ts.time_in }}</td>\\r\\n        <td (click)=\\\"populateForm(ts)\\\">{{ ts.time_out }}</td>\\r\\n        <td (click)=\\\"populateForm(ts)\\\">{{ ts.employee_init_id }}</td>\\r\\n        <td>\\r\\n            <i class=\\\"far fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(ts.timer_id)\\\"></i>\\r\\n        </td>\\r\\n    </tr>\\r\\n</table>\";","export default \"<form #timeForm=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(timeForm)\\\">\\r\\n    <input type=\\\"hidden\\\" name=\\\"timer_id\\\" [value]=\\\"timeService.timeFormData.timer_id\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <!-- employee_init_id Form Input -->\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text bg-white\\\">\\r\\n                    <i class=\\\"far fa-id-badge\\\" [class.green-icon]=\\\"employee_init_id.valid\\\" [class.red-icon]=\\\"employee_init_id.invalid && employee_init_id.touched\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <select name=\\\"employee_init_id\\\" id=\\\"employee_init_id\\\" #employee_init_id=\\\"ngModel\\\" [(ngModel)]=\\\"timeService.timeFormData.employee_init_id\\\" class=\\\"form-control\\\" required>\\r\\n                <option [value]=\\\"timeService.timeFormData.employee_init_id\\\" [selected] =\\\"true\\\" selected disabled>Choose employee ID</option>\\r\\n                <option *ngFor=\\\"let pd of service.list\\\" value=\\\"{{ pd.id_num }}\\\">{{ pd.id_num }}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n        <!-- date_of_work Form Input -->\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text bg-white\\\">\\r\\n                    <i class=\\\"far fa-calendar-alt\\\" [class.green-icon]=\\\"date_of_work.valid\\\" [class.red-icon]=\\\"date_of_work.invalid && date_of_work.touched\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <input name=\\\"date_of_work\\\" id=\\\"date_of_work\\\" #date_of_work=\\\"ngModel\\\" [(ngModel)]=\\\"timeService.timeFormData.date_of_work\\\" class=\\\"form-control\\\" placeholder=\\\"YYYY-MM-DD\\\" required>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-md-6\\\">\\r\\n            <!-- time_in Form Input -->\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <div class=\\\"input-group-text bg-white\\\">\\r\\n                        <!-- **Find icon here** -->\\r\\n                        <i class=\\\"far fa-clock\\\" [class.green-icon]=\\\"time_in.valid\\\" [class.red-icon]=\\\"time_in.invalid && time_in.touched\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <input name=\\\"time_in\\\" id=\\\"time_in\\\" #time_in=\\\"ngModel\\\" [(ngModel)]=\\\"timeService.timeFormData.time_in\\\" class=\\\"form-control\\\" placeholder=\\\"Employee Start Time\\\" required>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-6\\\">\\r\\n            <!-- time_out Form Input -->\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <div class=\\\"input-group-text bg-white\\\">\\r\\n                        <!-- **Find icon here** -->\\r\\n                        <i class=\\\"far fa-clock\\\" [class.green-icon]=\\\"time_out.valid\\\" [class.red-icon]=\\\"time_out.invalid && time_out.touched\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <input name=\\\"time_out\\\" id=\\\"time_out\\\" #time_out=\\\"ngModel\\\" [(ngModel)]=\\\"timeService.timeFormData.time_out\\\" class=\\\"form-control\\\" placeholder=\\\"Employee End Time\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"timeForm.invalid\\\"><i class=\\\"fas fa-database\\\"></i> Submit</button>\\r\\n        <button class=\\\"btn btn-warning btn-lg btn-block refresh\\\" type=\\\"button\\\" (click)=\\\"timeForm.resetForm()\\\"><i class=\\\"fas fa-sync-alt\\\"></i> Restart</button>\\r\\n    </div>\\r\\n</form>\";","export default \"<table class=\\\"table table-hover\\\">\\r\\n    <tr>\\r\\n        <td>Timer ID</td>\\r\\n        <td>Date</td>\\r\\n        <td>Start Time</td>\\r\\n        <td>End Time</td>\\r\\n        <td>Employee ID</td>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let ts of currentUserTimeStamps\\\" [ngClass]=\\\"{'not-clocked-out': ts.time_in === ts.time_out}\\\">\\r\\n        <td>{{ ts.timer_id }}</td>\\r\\n        <td>{{ ts.date_of_work.substring(0,10) }}</td>\\r\\n        <td>{{ ts.time_in }}</td>\\r\\n        <td>{{ ts.time_out }}</td>\\r\\n        <td>{{ ts.employee_init_id }}</td>\\r\\n    </tr>\\r\\n</table>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <p>Workhours: {{formatTotalTimeWorked(totalTimeWorked)}}</p>\\r\\n    </div>\\r\\n</div>\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export default \"p {\\r\\n    font-family: Lato;\\r\\n}\\r\\n\\r\\n.menuBtn {\\r\\n    font-size: 3em;\\r\\n    border: none;\\r\\n    background-color: white;\\r\\n    padding: 5px;\\r\\n    margin-left: 10px;\\r\\n}\\r\\n\\r\\n.menu-button {\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\n::ng-deep aside {\\r\\n    padding-right: 25px;\\r\\n    height: 100%;\\r\\n    z-index: -4;\\r\\n}\\r\\n\\r\\n.nav-container {\\r\\n    z-index: 1;\\r\\n    margin: 0px;\\r\\n}\\r\\n\\r\\nul li {\\r\\n    list-style-type: none;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYWRtaW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxZQUFZO0lBQ1osdUJBQXVCO0lBQ3ZCLFlBQVk7SUFDWixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsV0FBVztBQUNmOztBQUVBO0lBQ0kscUJBQXFCO0FBQ3pCIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4vYWRtaW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInAge1xyXG4gICAgZm9udC1mYW1pbHk6IExhdG87XHJcbn1cclxuXHJcbi5tZW51QnRuIHtcclxuICAgIGZvbnQtc2l6ZTogM2VtO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcclxufVxyXG5cclxuLm1lbnUtYnV0dG9uIHtcclxuICAgIG1hcmdpbjogMTBweDtcclxufVxyXG5cclxuOjpuZy1kZWVwIGFzaWRlIHtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDI1cHg7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB6LWluZGV4OiAtNDtcclxufVxyXG5cclxuLm5hdi1jb250YWluZXIge1xyXG4gICAgei1pbmRleDogMTtcclxuICAgIG1hcmdpbjogMHB4O1xyXG59XHJcblxyXG51bCBsaSB7XHJcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  private _opened: boolean = false;\r\n\r\n  constructor(private logoutService : AuthenticationService) { }\r\n\r\n  private _toggleSidebar() {\r\n    this._opened = !this._opened;\r\n  }\r\n\r\n  showDiv = {\r\n    employees : true,\r\n    timeData : false\r\n    }\r\n\r\n  logoutUser() {\r\n    this.logoutService.logout();\r\n    window.location.reload();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","import { Component } from '@angular/core';\r\nimport { EmployeeInfo } from './models/employee-info.model';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from './services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\ncurrentEmployee: EmployeeInfo;\r\n\r\nconstructor(\r\n  private router: Router,\r\n  private authenticationService: AuthenticationService\r\n) {\r\n  this.authenticationService.currentEmployee.subscribe(x => this.currentEmployee = x);\r\n}\r\n\r\nlogout() {\r\n  this.authenticationService.logout();\r\n  this.router.navigate(['/login']);\r\n}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { EmployeesInfoComponent } from './employees-info/employees-info.component';\r\nimport { EmployeeInfoComponent } from './employees-info/employee-info/employee-info.component';\r\nimport { EmployeeInfoListComponent } from './employees-info/employee-info-list/employee-info-list.component';\r\nimport { EmployeeInfoService } from './services/employee-info.service';\r\nimport { TimeTrackService } from './services/time-track.service';\r\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { appRoutingModule } from './app.routing';\r\nimport { MatIconModule } from '@angular/material/icon'\r\n \r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { TimeTrackingComponent } from './time-tracking/time-tracking.component';\r\nimport { TimeTrackingListComponent } from './time-tracking/time-tracking-list/time-tracking-list.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthInterceptor } from './helpers/auth.interceptor';\r\nimport { ErrorInterceptor } from './helpers/error.interceptor';\r\nimport { BackendInterceptor } from './helpers/backend'\r\nimport { SidebarModule } from 'ng-sidebar';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { UserTimeTrackingListComponent } from './time-tracking/user-time-tracking-list/user-time-tracking-list.component';\r\nimport { CheckInComponent } from './check-in/check-in.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EmployeesInfoComponent,\r\n    EmployeeInfoComponent,\r\n    EmployeeInfoListComponent,\r\n    TimeTrackingComponent,\r\n    TimeTrackingListComponent,\r\n    LoginComponent,\r\n    AdminComponent,\r\n    UserTimeTrackingListComponent,\r\n    CheckInComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot(),\r\n    appRoutingModule,\r\n    ReactiveFormsModule,\r\n    SidebarModule.forRoot(),\r\n    MatIconModule\r\n  ],\r\n  providers: [EmployeeInfoService, TimeTrackService, { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }, { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },  BackendInterceptor],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","﻿import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EmployeesInfoComponent } from './employees-info/employees-info.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { AuthGuard } from './helpers/auth.guard';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: AdminComponent, canActivate: [AuthGuard] },\r\n    { path: 'user', component: EmployeesInfoComponent, canActivate: [AuthGuard] },\r\n    { path: 'login', component: LoginComponent },\r\n\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: '' }\r\n];\r\n\r\nexport const appRoutingModule = RouterModule.forRoot(routes);","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NoZWNrLWluL2NoZWNrLWluLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { EmployeeInfoService } from '../services/employee-info.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TimeTrackService } from '../services/time-track.service';\r\nimport { NgForm, FormControl } from '@angular/forms';\r\nimport { formatDate } from '@angular/common';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport {TimeTrack} from '../models/time-track.model';\r\n\r\n@Component({\r\n  selector: 'app-check-in',\r\n  templateUrl: './check-in.component.html',\r\n  styleUrls: ['./check-in.component.css']\r\n})\r\nexport class CheckInComponent implements OnInit {\r\n  today = new Date();\r\n  date = new FormControl(new Date());\r\n  currUser: number = this.authService.currentUserValue.id_num;\r\n  user = document.getElementById('employee_init_id') as HTMLInputElement;\r\n  clockedIn: boolean = false;\r\n  lastTimeTrackInput: TimeTrack;//holds last input timetrack value from current user which time-out is default and waiting for updating\r\n\r\n  constructor(public timeService: TimeTrackService, private toastr: ToastrService, public service: EmployeeInfoService, public authService: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.resetForm();\r\n    this.timeService.timeFormData.employee_init_id = this.currUser; \r\n    this.isLastEntryTimeOutEntered();\r\n  }\r\n\r\n  onSubmit(timeForm: NgForm) {\r\n    this.clockedIn = true;\r\n    if (this.timeService.timeFormData.timer_id == 0) {\r\n      this.insertRecord(timeForm);\r\n      this.resetForm();\r\n    }\r\n    else {\r\n      this.updateRecord(timeForm);\r\n      this.resetForm();\r\n    }\r\n    window.location.reload();\r\n  }\r\n\r\n  updateFormWithDataFromLastOutput(){\r\n    if(this.clockedIn){\r\n      let newTime_outRecord = formatDate(this.today, 'HH:mm:ss', 'en-US');//new time_out data to update the default one.\r\n      //creating a new from with the data from the last timetrack array value.\r\n      this.timeService.timeFormData = {\r\n        timer_id: this.lastTimeTrackInput.timer_id,\r\n        employee_init_id: this.lastTimeTrackInput.employee_init_id,\r\n        date_of_work: this.lastTimeTrackInput.date_of_work,\r\n        time_in: this.lastTimeTrackInput.time_in,\r\n        time_out: newTime_outRecord,\r\n      }\r\n    }\r\n  }\r\n\r\n  clockOut(form: NgForm) {\r\n\r\n    this.updateFormWithDataFromLastOutput();\r\n    this.clockedIn = false;\r\n    this.lastTimeTrackInput = undefined;//erasing last input timetrack value from current user because its upadetd and we have no use for it.\r\n    this.updateRecord(form);\r\n    this.resetForm();\r\n    window.location.reload();\r\n  }\r\n\r\n  updateRecord(timeForm: NgForm) {\r\n    this.timeService.putTimeTracking().subscribe(\r\n      res => {\r\n        this.resetForm(timeForm);\r\n        this.toastr.info('Updated successfully', 'Time Tracking Register');\r\n        this.timeService.refreshTimeList();\r\n      },\r\n      err => {\r\n        this.toastr.error(err.message, \"Error!\");\r\n      }\r\n    )\r\n  }\r\n\r\n  insertRecord(timeForm: NgForm) {\r\n    this.timeService.postTimeTracking().subscribe(\r\n      res => {\r\n        this.resetForm(timeForm);\r\n        this.timeService.refreshTimeList();\r\n      },\r\n      err => {\r\n        this.toastr.error(err.message, \"Error!\");\r\n      }\r\n    )\r\n  }\r\n\r\n  resetForm(timeForm?: NgForm) {\r\n    if (timeForm != null)\r\n      timeForm.form.reset();\r\n    this.timeService.timeFormData = {\r\n      timer_id: 0,\r\n      employee_init_id: 0,\r\n      date_of_work: formatDate(this.today, 'yyyy-MM-dd', 'en'),\r\n      time_in: formatDate(this.today, 'HH:mm:ss', 'en-US'),\r\n      time_out: formatDate(this.today, 'HH:mm:ss', 'en-US'),\r\n      //time_out: formatDate(this.today, 'HH:mm:ss', 'en-US','+1000'),\r\n    }\r\n  }\r\n\r\n  /**\r\n   * method checks to see if last record entered time-out value has been entered aka. clocked-out\r\n   * The indicator that checks if clock-out has been entered is if the clock-in and clock-out are equal. \r\n   * Baceuse if not, then the result when calculating total time of that day will be 0.\r\n   */\r\n  isLastEntryTimeOutEntered(){\r\n    this.timeService.getAll().subscribe(res => {//get list of timestamps of current user\r\n        let allCurrentUserTimeTrackData = this.getTimeTracksOfCurrentUser(res);//get timetracks of current user\r\n        if(allCurrentUserTimeTrackData.length===0){//if no entries exists stop.\r\n          this.clockedIn = false;//enable the clock in button since there are no records so there is no need to clock out.\r\n        }else{\r\n          let lastEntry = allCurrentUserTimeTrackData[allCurrentUserTimeTrackData.length-1];//get last timetrack record of current user\r\n          if(lastEntry.date_of_work.substring(0,10) === \"\"+formatDate(new Date(), 'yyyy-MM-dd', 'en')){//compare last time record date with todays date\r\n            //Dates are the same with last record and todays date are equal.\r\n            if(lastEntry.time_in === lastEntry.time_out){//if time-out has not been entered.\r\n              this.clockedIn = true;//disable clock-in button, clock-out button is enabled.\r\n              this.lastTimeTrackInput = lastEntry;\r\n              //times are the same must update record!!!\r\n              this.timeService.timeFormData.time_in = lastEntry.time_in;//Clocked-out is enabeled dislay time-in data from last clocked-in data input!\r\n            }\r\n          }\r\n        }\r\n    });\r\n  }\r\n  /**\r\n   * This method seperates the current users TimeTracks from the others.\r\n   * @param data holds an array of all TimeTracks in storage\r\n   * @returns All array Timestack data of current user.\r\n   */\r\n  getTimeTracksOfCurrentUser(data: TimeTrack[]){\r\n      let currentUserTimeTracks = [];//new array to hold current users data\r\n      data.forEach(element => {//loop each TimeTrack \r\n        if(element.employee_init_id == this.timeService.timeFormData.employee_init_id){//If both id's match then push this record\r\n          currentUserTimeTracks.push(element);//add record to array\r\n        }\r\n      });\r\n      return currentUserTimeTracks//return new array with only current users timetracks\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy1pbmZvL2VtcGxveWVlLWluZm8tbGlzdC9lbXBsb3llZS1pbmZvLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\";","import { EmployeeInfoService } from '../../services/employee-info.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-employee-info-list',\r\n  templateUrl: './employee-info-list.component.html',\r\n  styleUrls: ['./employee-info-list.component.css']\r\n})\r\nexport class EmployeeInfoListComponent implements OnInit {\r\n\r\n  constructor(public service: EmployeeInfoService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.service.refreshList();\r\n  } \r\n\r\n  populateForm(selectedRecord) {\r\n    this.service.formData = Object.assign({}, selectedRecord);\r\n  }\r\n\r\n  onDelete(id_num) {\r\n    if (confirm('Are you sure to delete this employee record?')) {\r\n      this.service.deleteEmployeeInfo(id_num)\r\n        .subscribe(res => {\r\n          this.toastr.info('Successfuly Deleted', 'Employee Successfuly Deleted');\r\n          this.service.refreshList();\r\n        },\r\n        err => { console.log(err); })\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy1pbmZvL2VtcGxveWVlLWluZm8vZW1wbG95ZWUtaW5mby5jb21wb25lbnQuY3NzIn0= */\";","import { EmployeeInfoService } from '../../services/employee-info.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { MatIconModule } from '@angular/material/icon'\r\n\r\n@Component({\r\n  selector: 'app-employee-info',\r\n  templateUrl: './employee-info.component.html',\r\n  styleUrls: ['./employee-info.component.css']\r\n}) \r\nexport class EmployeeInfoComponent implements OnInit {\r\n  hide = true;\r\n  visibleEye:  string = \"<i class='far fa-eye-slash'></i>\";\r\n  invisibleEye: string = \"<i class='far fa-eye'></i>\";\r\n  public usernames: String[] = [];\r\n\r\n  constructor(private service: EmployeeInfoService, private toastr: ToastrService) { }\r\n\r\n   ngOnInit() {\r\n    this.resetForm(); \r\n    this.service.refreshList();\r\n    this.service.getAll().subscribe(res => {\r\n      this.service.list.forEach(element => {\r\n        this.usernames.push(element.username);\r\n      });\r\n    });\r\n  }\r\n  \r\n  onSubmit(form: NgForm) {\r\n\r\n      if (this.service.formData.id_num == 0)\r\n        this.insertRecord(form);\r\n      else\r\n        this.updateRecord(form);\r\n \r\n  }\r\n  \r\n  updateRecord(form: NgForm) {\r\n    this.service.putEmployeeInfo().subscribe(\r\n      res => {\r\n        this.resetForm(form);\r\n        this.toastr.info('Updated successfully', 'Employee Info Register');\r\n        this.service.refreshList();\r\n      },\r\n      err => {\r\n        this.toastr.error(err.message, \"Error!\");\r\n      }\r\n    )\r\n  }\r\n\r\n  insertRecord(form: NgForm) {\r\n    this.service.postEmployeeInfo().subscribe(\r\n      res => {\r\n        this.resetForm(form);\r\n        this.toastr.info('Inserted successfully', 'Employee Info Register');\r\n        this.service.refreshList();\r\n      },\r\n      err => { \r\n        this.toastr.error(err.message, \"Error!\");\r\n      }\r\n    )\r\n  }\r\n  \r\n  resetForm(form?: NgForm) {\r\n    if (form != null)\r\n      form.form.reset();\r\n    this.service.formData = {\r\n      id_num: 0,\r\n      username: '',\r\n      password: '',\r\n      first_name: '',\r\n      last_name: '',\r\n      user_privileges: ''\r\n    }\r\n  }  \r\n\r\n  isNewUsernameUnique(usernames: String[], newUsername: String): boolean{\r\n    let isUnique =  true;\r\n    usernames.forEach(element => {\r\n      if(element === newUsername){\r\n        isUnique = false;\r\n      }\r\n    });\r\n    if(isUnique){\r\n      return true;\r\n    }\r\n  }\r\n}","export default \"p {\\r\\n    font-family: Lato;\\r\\n}\\r\\n\\r\\n.menuBtn {\\r\\n    font-size: 3em;\\r\\n    border: none;\\r\\n    background-color: white;\\r\\n    padding: 5px;\\r\\n    margin-left: 10px;\\r\\n}\\r\\n\\r\\n.menu-button {\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\n::ng-deep aside {\\r\\n    padding-right: 25px;\\r\\n    height: 100%;\\r\\n    z-index: -4;\\r\\n}\\r\\n\\r\\n.nav-container {\\r\\n    z-index: 1;\\r\\n    margin: 0px;\\r\\n}\\r\\n\\r\\nul li {\\r\\n    list-style-type: none;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW1wbG95ZWVzLWluZm8vZW1wbG95ZWVzLWluZm8uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxZQUFZO0lBQ1osdUJBQXVCO0lBQ3ZCLFlBQVk7SUFDWixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsV0FBVztBQUNmOztBQUVBO0lBQ0kscUJBQXFCO0FBQ3pCIiwiZmlsZSI6InNyYy9hcHAvZW1wbG95ZWVzLWluZm8vZW1wbG95ZWVzLWluZm8uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInAge1xyXG4gICAgZm9udC1mYW1pbHk6IExhdG87XHJcbn1cclxuXHJcbi5tZW51QnRuIHtcclxuICAgIGZvbnQtc2l6ZTogM2VtO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcclxufVxyXG5cclxuLm1lbnUtYnV0dG9uIHtcclxuICAgIG1hcmdpbjogMTBweDtcclxufVxyXG5cclxuOjpuZy1kZWVwIGFzaWRlIHtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDI1cHg7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB6LWluZGV4OiAtNDtcclxufVxyXG5cclxuLm5hdi1jb250YWluZXIge1xyXG4gICAgei1pbmRleDogMTtcclxuICAgIG1hcmdpbjogMHB4O1xyXG59XHJcblxyXG51bCBsaSB7XHJcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbn0iXX0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { TimeTrackService } from '../services/time-track.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { EmployeeInfoService } from '../services/employee-info.service';\r\nimport { NgForm, FormControl } from '@angular/forms';\r\nimport { formatDate } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-employees-info',\r\n  templateUrl: './employees-info.component.html',\r\n  styleUrls: ['./employees-info.component.css']\r\n})\r\nexport class EmployeesInfoComponent implements OnInit {\r\n  private _opened: boolean = false;\r\n  today = new Date();\r\n  date = new FormControl(new Date());\r\n  userIdPlaceholder: Number = this.logoutService.currentUserValue.id_num;\r\n\r\n  constructor(private logoutService: AuthenticationService, private timeService: TimeTrackService, private toastr: ToastrService, public service: EmployeeInfoService) { }\r\n\r\n  private _toggleSidebar() {\r\n    this._opened = !this._opened;\r\n  }\r\n\r\n  showDiv = {\r\n    timeData: true\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  logoutUser() {\r\n    this.logoutService.logout();\r\n    window.location.reload();\r\n  }\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with basic auth credentials if available\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser && currentUser.authdata) {\r\n            request = request.clone({\r\n                setHeaders: { \r\n                    Authorization: `Basic ${currentUser.authdata}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS, HttpClient } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\nimport { EmployeeInfoService } from '../services/employee-info.service';\r\n\r\n@Injectable()\r\nexport class BackendInterceptor implements HttpInterceptor {\r\n    \r\n    constructor(public employeeService : EmployeeInfoService) {  }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const { url, method, headers, body } = request;\r\n\r\n        // wrap in delayed observable to simulate server api call\r\n        return of(null)\r\n            .pipe(mergeMap(handleRoute))\r\n            .pipe(materialize())\r\n            .pipe(delay(500))\r\n            .pipe(dematerialize());\r\n\r\n        function handleRoute() {\r\n            switch (true) {\r\n                case url.endsWith('/EmployeeInfo/authenticate') && method === 'POST':\r\n                    return authenticate();\r\n                case url.endsWith('/EmployeeInfo') && method === 'GET':\r\n                    return getUsers();\r\n                default:\r\n                    // pass through any requests not handled above\r\n                    return next.handle(request);\r\n            }    \r\n        }\r\n\r\n        // route functions\r\n        function authenticate() {\r\n            const { username, password } = body;\r\n            const employee = this.employeeService.getAll().find(x => x.username === username && x.password === password);\r\n            if (!employee) return error('Username or password is incorrect');\r\n            return ok({\r\n                id_num: employee.id_num,\r\n                username: employee.username,\r\n                first_name: employee.first_name,\r\n                last_name: employee.last_name\r\n            })\r\n        }\r\n\r\n        /** */\r\n        function getUsers() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n            return ok(this.service.getAll());\r\n        }\r\n\r\n        // helper functions\r\n\r\n        function ok(body?) {\r\n            return of(new HttpResponse({ status: 200, body }))\r\n        }\r\n\r\n        function error(message) {\r\n            return throwError({ error: { message: 'No idea what is happening' } });\r\n        }\r\n\r\n        function unauthorized() {\r\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\r\n        }\r\n\r\n        function isLoggedIn() {\r\n            return headers.get('Authorization') === `Basic ${window.btoa('test:test')}`;\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authenticationService.logout();\r\n                location.reload(true);\r\n            }\r\n\r\n            const error = err || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';  \r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { EmployeeInfoService } from '../services/employee-info.service';\r\nimport 'rxjs/add/operator/catch';\r\nimport { EmployeesInfoComponent } from '../employees-info/employees-info.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  hide = true;\r\n  visibleEye:  string = \"<i class='far fa-eye-slash'></i>\";\r\n  invisibleEye: string = \"<i class='far fa-eye'></i>\";\r\n    loginForm: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n    returnUrl: string;\r\n    userUrl: string;\r\n    error = '';\r\n    errStr = '';\r\n  \r\n  constructor(private toastr: ToastrService, private formBuilder: FormBuilder, \r\n    private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService, private http: HttpClient, public service: EmployeeInfoService) { \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n        username: ['', Validators.required],\r\n        password: ['', Validators.required]\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  get formInput() { return this.loginForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n        return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.authenticationService.login(this.formInput.username.value, this.formInput.password.value)\r\n        .pipe(first())\r\n        .subscribe(\r\n            data => {\r\n              let currUser = this.service.getEmployeeById(this.authenticationService.currentUserValue.id_num);\r\n              currUser.subscribe(res => {\r\n                  let privilege = res[\"user_privileges\"];\r\n                    if(privilege === \"User\") {\r\n                      console.log(\"Regular User\");\r\n                        this.router.navigate(['user']);\r\n                    } else if(privilege === \"Admin\"){\r\n                      console.log(\"Superuser\");\r\n                      this.router.navigate(['']);\r\n                      console.log(this.route);\r\n                    }\r\n              });   \r\n            },\r\n            error => {\r\n              this.error = error;\r\n              this.toastr.error(error.error.message, \"Error!\");\r\n              this.loginForm.reset();\r\n              this.loading = false;\r\n            });\r\n  }\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { EmployeeInfo } from '../models/employee-info.model';\r\nimport { EmployeeInfoService } from './employee-info.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    private currentEmployeeSubject: BehaviorSubject<EmployeeInfo>;\r\n    public currentEmployee: Observable<EmployeeInfo>;\r\n\r\n    constructor(private http: HttpClient, public service: EmployeeInfoService) {\r\n        this.currentEmployeeSubject = new BehaviorSubject<EmployeeInfo>(JSON.parse(localStorage.getItem('currentEmployee')));\r\n        this.currentEmployee = this.currentEmployeeSubject.asObservable();\r\n    }\r\n\r\n    public get currentUserValue(): EmployeeInfo {\r\n        return this.currentEmployeeSubject.value;\r\n    }\r\n\r\n    login(username: string, password: string) {\r\n        return this.http.post<any>(`${this.service.rootURL}/EmployeeInfo/authenticate`, { username, password }).pipe(map(user => {\r\n                // store user details and basic auth credentials in local storage to keep user logged in between page refreshes\r\n                user.authdata = window.btoa(username + ':' + password);\r\n                localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n                this.currentEmployeeSubject.next(user);\r\n                return user;                \r\n            }));\r\n            \r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('currentEmployee');\r\n        this.currentEmployeeSubject.next(null);\r\n    }\r\n}","import { EmployeeInfo } from '../models/employee-info.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { TimeTrack } from '../models/time-track.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeInfoService {\r\n  formData: EmployeeInfo;\r\n  readonly rootURL = 'http://localhost:5050/api';\r\n  list : EmployeeInfo[];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll() {\r\n    return this.http.get<EmployeeInfo[]>(this.rootURL + '/EmployeeInfo'); \r\n  }\r\n  getEmployeeById(id_num: Number) {\r\n    return this.http.get<EmployeeInfo[]>(this.rootURL + '/EmployeeInfo/' + id_num);\r\n  }\r\n  postEmployeeInfo() {\r\n    return this.http.post(this.rootURL + '/EmployeeInfo', this.formData);\r\n  }\r\n  putEmployeeInfo() {\r\n    return this.http.put(this.rootURL + '/EmployeeInfo/'+ this.formData.id_num, this.formData);\r\n  }\r\n  deleteEmployeeInfo(id) {\r\n    return this.http.delete(this.rootURL + '/EmployeeInfo/'+ id);\r\n  }\r\n  refreshList(){\r\n    this.http.get(this.rootURL + '/EmployeeInfo')\r\n    .toPromise()\r\n    .then(res => this.list = res as EmployeeInfo[]);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { TimeTrack } from '../models/time-track.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root' \r\n})\r\nexport class TimeTrackService { \r\n  timeFormData: TimeTrack;\r\n  readonly rootURL = 'http://localhost:5050/api';\r\n  timeList: TimeTrack[];\r\n  userTimeList: TimeTrack[];\r\n\r\n  constructor(private http: HttpClient) { }\r\n  getAll() {\r\n    return this.http.get<TimeTrack[]>(this.rootURL + '/TimeTracking');\r\n  }\r\n  postTimeTracking() {\r\n    return this.http.post(this.rootURL + '/TimeTracking', this.timeFormData);\r\n  }\r\n  putTimeTracking() {\r\n    return this.http.put(this.rootURL + '/TimeTracking/'+ this.timeFormData.timer_id, this.timeFormData);\r\n  }\r\n  deleteTimeTracking(time_id) {\r\n    return this.http.delete(this.rootURL + '/TimeTracking/'+ time_id);\r\n  }\r\n  refreshTimeList(){\r\n    this.http.get(this.rootURL + '/TimeTracking').toPromise().then(res => this.timeList = res as TimeTrack[]);\r\n  }\r\n\r\n \r\n  \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RpbWUtdHJhY2tpbmcvdGltZS10cmFja2luZy1saXN0L3RpbWUtdHJhY2tpbmctbGlzdC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { TimeTrackService } from '../../services/time-track.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Component({\r\n  selector: 'app-time-tracking-list',\r\n  templateUrl: './time-tracking-list.component.html',\r\n  styleUrls: ['./time-tracking-list.component.css']\r\n})\r\nexport class TimeTrackingListComponent implements OnInit {\r\n\r\n  constructor(public timeService: TimeTrackService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.timeService.refreshTimeList();\r\n  }\r\n\r\n  populateForm(selectedRecord) {\r\n    this.timeService.timeFormData = Object.assign({}, selectedRecord);\r\n  }\r\n\r\n  onDelete(timer_id) {\r\n    if (confirm('Are you sure to delete this time track record?')) {\r\n      this.timeService.deleteTimeTracking(timer_id)\r\n        .subscribe(res => {\r\n          this.toastr.info('Record with ID: ' + timer_id + ' successfuly deleted.', 'Success');\r\n          this.timeService.refreshTimeList();\r\n        },\r\n        err => { this.toastr.error(err.message, \"Error!\"); })\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RpbWUtdHJhY2tpbmcvdGltZS10cmFja2luZy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { NgForm, FormControl } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TimeTrackService } from '../services/time-track.service';\r\nimport { formatDate } from '@angular/common';\r\nimport { EmployeeInfoService } from '../services/employee-info.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-time-tracking',\r\n  templateUrl: './time-tracking.component.html',\r\n  styleUrls: ['./time-tracking.component.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\n\r\nexport class TimeTrackingComponent implements OnInit {\r\n  today = new Date();\r\n  date  =  new  FormControl(new  Date());\r\n\r\n\r\n  constructor(private timeService: TimeTrackService, private toastr: ToastrService, public service: EmployeeInfoService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.resetForm();\r\n  }\r\n\r\n  onSubmit(timeForm: NgForm) {\r\n    if (this.timeService.timeFormData.timer_id == 0) {\r\n      this.insertRecord(timeForm);\r\n    }\r\n    else {\r\n      this.updateRecord(timeForm);\r\n    }\r\n    this.resetForm();\r\n  }\r\n  \r\n  updateRecord(timeForm: NgForm) {\r\n    this.timeService.putTimeTracking().subscribe(\r\n      res => {\r\n        this.resetForm(timeForm);\r\n        this.toastr.info('Updated successfully', 'Time Tracking Register');\r\n        this.timeService.refreshTimeList();\r\n      },\r\n      err => {\r\n        this.toastr.error(err.message, \"Error!\")\r\n      }\r\n    )\r\n  }\r\n\r\n  insertRecord(timeForm: NgForm) {\r\n    this.timeService.postTimeTracking().subscribe(\r\n      res => {\r\n        this.resetForm(timeForm);\r\n        this.timeService.refreshTimeList();\r\n      },\r\n      err => { \r\n        this.toastr.error(err.message, \"Error!\")\r\n      }\r\n    )\r\n  }\r\n  \r\n  resetForm(timeForm?: NgForm) {\r\n    if (timeForm != null)\r\n    timeForm.form.reset();\r\n    this.timeService.timeFormData = {\r\n      timer_id: 0,\r\n      employee_init_id: 0,\r\n      date_of_work: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\r\n      time_in: formatDate(this.today, 'HH:mm:ss', 'en-US'),\r\n      time_out: formatDate(this.today, 'HH:mm:ss', 'en-US', '+1000'),\r\n        }\r\n  }  \r\n\r\n}\r\n","export default \".not-clocked-out{\\r\\n    background-color: #a8a6a5;\\r\\n    \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGltZS10cmFja2luZy91c2VyLXRpbWUtdHJhY2tpbmctbGlzdC91c2VyLXRpbWUtdHJhY2tpbmctbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCOztBQUU3QiIsImZpbGUiOiJzcmMvYXBwL3RpbWUtdHJhY2tpbmcvdXNlci10aW1lLXRyYWNraW5nLWxpc3QvdXNlci10aW1lLXRyYWNraW5nLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ub3QtY2xvY2tlZC1vdXR7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYThhNmE1O1xyXG4gICAgXHJcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { TimeTrackService } from '../../services/time-track.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { TimeTrack } from 'src/app/models/time-track.model';\r\nimport { FormControl } from '@angular/forms';\r\nimport { formatDate } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-user-time-tracking-list',\r\n  templateUrl: './user-time-tracking-list.component.html',\r\n  styleUrls: ['./user-time-tracking-list.component.css']\r\n})\r\nexport class UserTimeTrackingListComponent implements OnInit {\r\n\r\n  public currentUserTimeStamps: TimeTrack[] = [];\r\n  public totalTimeWorked: number;\r\n  today = new Date();\r\n  date = new FormControl(new Date());\r\n  \r\n  constructor(public timeService: TimeTrackService, private toastr: ToastrService, private authenticationService: AuthenticationService) {}\r\n   \r\n\r\n  ngOnInit(): void {\r\n    this.getCurrentUserTimeTrack();\r\n    for(let ts of this.currentUserTimeStamps) {\r\n      if(ts.date_of_work !== formatDate(new Date(), 'yyyy-MM-dd', 'en')) {\r\n        this.toastr.error(\"Error\", \"Error\");\r\n      } else {\r\n        this.toastr.success(\"Success\", \"Success\"); \r\n      }\r\n    }\r\n  }\r\n\r\n  getCurrentUserTimeTrack(): void{\r\n\r\n    let allTimeTracks = this.timeService.getAll();\r\n    allTimeTracks.forEach(function (value){\r\n      for(let i = 0; i < value.length; i++){\r\n        if(value[i].employee_init_id === this.authenticationService.currentUserValue.id_num){\r\n          this.currentUserTimeStamps.push(value[i]);\r\n        }\r\n      }\r\n      this.totalTimeWorked = this.calculateTotalTimeWorked();\r\n      //console.log(this.totalTimeWorked+\"finally\");\r\n    }.bind(this));\r\n  }\r\n\r\n  calculateTotalTimeWorked(): number{\r\n    let totalHoursWorked = 0;\r\n    this.currentUserTimeStamps.forEach(date => {\r\n      totalHoursWorked += this.calculateTimeWorkedOfTheDay(date.date_of_work, date.time_in, date.time_out);\r\n      //totalHoursWorked += this.calculateTimeWorkedOfTheDay(\"2020-07-21T00:00:00\",\"21:55:55\",\"01:35:57\");//testing\r\n      //console.log(totalHoursWorked);\r\n    });\r\n    return parseFloat(totalHoursWorked.toFixed(3));\r\n  }\r\n\r\n  calculateTimeWorkedOfTheDay(date: String, _start: String, _end: String){\r\n    let d1 = new Date(date.substring(0,10) +\"T\"+_start+\"Z\");  \r\n    let d2 = new Date(date.substring(0,10) +\"T\"+_end+\"Z\"); \r\n    let _24hinMiliseconds = 86400000;\r\n    if(d1.getTime() > d2.getTime()){\r\n      let total = (_24hinMiliseconds - d1.getTime())+d2.getTime();\r\n      //console.log(this.convertMilisecondsToHours(total).toFixed(3));\r\n      return parseFloat(this.convertMilisecondsToHours(total).toFixed(3));\r\n    }else{\r\n    let total = d2.getTime() - d1.getTime();\r\n    //console.log(this.convertMilisecondsToHours(total).toFixed(3));\r\n    return parseFloat(this.convertMilisecondsToHours(total).toFixed(3));\r\n    }\r\n\r\n  }\r\n\r\n  convertMilisecondsToHours(ms: number):number{\r\n      let hours =((ms/1000)/60)/60;\r\n      return hours;\r\n  }\r\n\r\n  roundHourRemainderToMinutes(hours: number){\r\n    let wholeHours = Math.floor(hours);\r\n    let remainder = hours - wholeHours;\r\n    let minutes = remainder * 60;\r\n    return Math.floor(minutes);\r\n  }\r\n\r\n  formatTotalTimeWorked(totalTimeInHours: number): string{\r\n      let hours = Math.floor(totalTimeInHours);\r\n      let minutes = this.roundHourRemainderToMinutes(totalTimeInHours);\r\n      return hours+\"h \"+minutes+\"m\";\r\n  }\r\n\r\n  \r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:5040'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}