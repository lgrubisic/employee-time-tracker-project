{"version":3,"sources":["./src/app/app.component.html","./src/app/employees-info/employee-info-list/employee-info-list.component.html","./src/app/employees-info/employee-info/employee-info.component.html","./src/app/employees-info/employees-info.component.html","./src/app/login/login.component.html","./src/app/time-tracking/time-tracking-list/time-tracking-list.component.html","./src/app/time-tracking/time-tracking.component.html","./src/app/user/user.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/employees-info/employee-info-list/employee-info-list.component.css","./src/app/employees-info/employee-info-list/employee-info-list.component.ts","./src/app/employees-info/employee-info/employee-info.component.css","./src/app/employees-info/employee-info/employee-info.component.ts","./src/app/employees-info/employees-info.component.css","./src/app/employees-info/employees-info.component.ts","./src/app/helpers/auth.guard.ts","./src/app/helpers/auth.interceptor.ts","./src/app/helpers/error.interceptor.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/services/authentication.service.ts","./src/app/services/employee-info.service.ts","./src/app/services/time-track.service.ts","./src/app/time-tracking/time-tracking-list/time-tracking-list.component.css","./src/app/time-tracking/time-tracking-list/time-tracking-list.component.ts","./src/app/time-tracking/time-tracking.component.css","./src/app/time-tracking/time-tracking.component.ts","./src/app/user/user.component.css","./src/app/user/user.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export default \"<app-login>\\r\\n</app-login>\";","export default \"<table class=\\\"table table-hover\\\">\\r\\n    <tr>\\r\\n        <td>ID</td>\\r\\n        <td>First Name</td>\\r\\n        <td>Last Name</td>\\r\\n        <td>User Privileges</td>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let pd of service.list\\\">\\r\\n        <td (click)=\\\"populateForm(pd)\\\">{{ pd.id_num }}</td>\\r\\n        <td (click)=\\\"populateForm(pd)\\\">{{ pd.first_name }}</td>\\r\\n        <td (click)=\\\"populateForm(pd)\\\">{{ pd.last_name }}</td>\\r\\n        <td (click)=\\\"populateForm(pd)\\\">{{ pd.user_privileges }}</td>\\r\\n        <td>\\r\\n            <i class=\\\"far fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(pd.id_num)\\\"></i>\\r\\n        </td>\\r\\n    </tr>\\r\\n</table>\";","export default \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\r\\n    <input type=\\\"hidden\\\" name=\\\"id_num\\\" [value]=\\\"service.formData.id_num\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <!-- First Name Form Input -->\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text bg-white\\\">\\r\\n                    <i class=\\\"fas fa-user-circle\\\" [class.green-icon]=\\\"first_name.valid\\\" [class.red-icon]=\\\"first_name.invalid && first_name.touched\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <input name=\\\"first_name\\\" #first_name=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.first_name\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\" required>\\r\\n        </div>\\r\\n        <!-- Last Name Form Input -->\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text bg-white\\\">\\r\\n                    <i class=\\\"fas fa-user-circle\\\" [class.green-icon]=\\\"last_name.valid\\\" [class.red-icon]=\\\"last_name.invalid && last_name.touched\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <input name=\\\"last_name\\\" #last_name=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.last_name\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name\\\" required>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <!-- User Privileges Form Input -->\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text bg-white\\\">\\r\\n                    <!-- **Find icon here** -->\\r\\n                    <i class=\\\"fas fa-user-shield\\\" [class.green-icon]=\\\"user_privileges.valid\\\" [class.red-icon]=\\\"user_privileges.invalid && user_privileges.touched\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <input name=\\\"user_privileges\\\" #user_privileges=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.user_privileges\\\" class=\\\"form-control\\\" placeholder=\\\"User Privileges (Admin or User)\\\" pattern=\\\"(?:Admin|User)\\\" required maxlength=\\\"5\\\" minlength=\\\"4\\\">\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-md-7\\\">\\r\\n            <!-- Username Form Input -->\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <div class=\\\"input-group-text bg-white\\\">\\r\\n                        <!-- **Find icon here** -->\\r\\n                        <i class=\\\"far fa-user\\\" [class.green-icon]=\\\"username.valid\\\" [class.red-icon]=\\\"username.invalid && username.touched\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <input name=\\\"username\\\" #username=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.username\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" required>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-5\\\">\\r\\n            <!-- Password Form Input -->\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <div class=\\\"input-group-text bg-white\\\">\\r\\n                        <i class=\\\"fas fa-key\\\" [class.green-icon]=\\\"password.valid\\\" [class.red-icon]=\\\"password.invalid && password.touched\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <input type=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fas fa-database\\\"></i> Submit</button>\\r\\n    </div>\\r\\n</form>\";","export default \"<div class=\\\"jumbtron\\\">\\r\\n    <h1 class=\\\"display-4 text-center\\\">Employees</h1>\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <app-employee-info></app-employee-info>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-7\\\">\\r\\n            <app-employee-info-list></app-employee-info-list>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"jumbtron\\\">\\r\\n    <h1 class=\\\"display-4 text-center\\\">Time Tracking</h1>\\r\\n    <hr>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-5\\\">\\r\\n            <app-time-tracking>\\r\\n            </app-time-tracking>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-7\\\">\\r\\n            <app-time-tracking-list>\\r\\n            </app-time-tracking-list>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"col-md-6 offset-md-3 mt-5\\\">\\r\\n    <div class=\\\"alert alert-info\\\">\\r\\n        <tr *ngFor=\\\"let emp of loginService.loginList\\\">\\r\\n            <td>{{ emp.username }}</td>\\r\\n        </tr>\\r\\n    </div>\\r\\n    <div class=\\\"card\\\">\\r\\n        <h4 class=\\\"card-header\\\">Employee Tracker</h4>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <form #loginForm=\\\"ngForm\\\" [formGroup]=\\\"loginForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(loginForm)\\\">\\r\\n                <!--Username-->\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"username\\\">Username</label>\\r\\n                    <input name=\\\"username\\\" #username=\\\"ngModel\\\" formControlName=\\\"username\\\" [(ngModel)]=\\\"loginService.loginFormData.username\\\" [ngClass]=\\\"{ 'is-invalid': submitted && formInput.username.errors }\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" required>\\r\\n                    <div *ngIf=\\\"submitted && formInput.username.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"formInput.username.errors.required\\\">Username is required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!--Password-->\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"password\\\">Password</label>\\r\\n                    <input type=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" formControlName=\\\"password\\\" [(ngModel)]=\\\"loginService.loginFormData.password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && formInput.password.errors }\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required>\\r\\n                    <div *ngIf=\\\"submitted && formInput.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                        <div *ngIf=\\\"formInput.password.errors.required\\\">Password is required</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <button [disabled]=\\\"loading\\\" routerLink=\\\"employees-info/employees-info\\\" routerLinkActive=\\\"active\\\" class=\\\"btn btn-primary\\\">\\r\\n                    <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\r\\n                    Login\\r\\n                </button>\\r\\n                <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger mt-3 mb-0\\\">{{error}}</div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<table class=\\\"table table-hover\\\">\\r\\n    <tr>\\r\\n        <td>Timer ID</td>\\r\\n        <td>Date</td>\\r\\n        <td>Start Time</td>\\r\\n        <td>End Time</td>\\r\\n        <td>Employee ID</td>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let ts of timeService.timeList\\\">\\r\\n        <td (click)=\\\"populateForm(ts)\\\">{{ ts.timer_id }}</td>\\r\\n        <td (click)=\\\"populateForm(ts)\\\">{{ ts.date_of_work }}</td>\\r\\n        <td (click)=\\\"populateForm(ts)\\\">{{ ts.time_in }}</td>\\r\\n        <td (click)=\\\"populateForm(ts)\\\">{{ ts.time_out }}</td>\\r\\n        <td (click)=\\\"populateForm(ts)\\\">{{ ts.employee_init_id }}</td>\\r\\n        <td>\\r\\n            <i class=\\\"far fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(ts.timer_id)\\\"></i>\\r\\n        </td>\\r\\n    </tr>\\r\\n</table>\";","export default \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\r\\n    <input type=\\\"hidden\\\" name=\\\"timer_id\\\" [value]=\\\"timeService.timeFormData.timer_id\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n\\r\\n        <!-- employee_init_id Form Input -->\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text bg-white\\\">\\r\\n                    <i class=\\\"far fa-calendar-alt\\\" [class.green-icon]=\\\"employee_init_id.valid\\\" [class.red-icon]=\\\"employee_init_id.invalid && employee_init_id.touched\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <select name=\\\"employee_init_id\\\" #employee_init_id=\\\"ngModel\\\" [(ngModel)]=\\\"timeService.timeFormData.employee_init_id\\\" class=\\\"form-control\\\" required>\\r\\n                <option [ngValue]=\\\"null\\\" [disabled]=\\\"true\\\" >Choose employee ID</option>\\r\\n                <option *ngFor=\\\"let pd of service.list\\\" value=\\\"{{ pd.id_num }}\\\">{{ pd.id_num }}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n        <!-- date_of_work Form Input -->\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n                <div class=\\\"input-group-text bg-white\\\">\\r\\n                    <i class=\\\"far fa-calendar-alt\\\" [class.green-icon]=\\\"date_of_work.valid\\\" [class.red-icon]=\\\"date_of_work.invalid && date_of_work.touched\\\"></i>\\r\\n                </div>\\r\\n            </div>\\r\\n            <input name=\\\"date_of_work\\\" #date_of_work=\\\"ngModel\\\" [(ngModel)]=\\\"timeService.timeFormData.date_of_work\\\" class=\\\"form-control\\\" placeholder=\\\"YYYY-MM-DD\\\" required>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-md-7\\\">\\r\\n            <!-- time_in Form Input -->\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <div class=\\\"input-group-text bg-white\\\">\\r\\n                        <!-- **Find icon here** -->\\r\\n                        <i class=\\\"far fa-clock\\\" [class.green-icon]=\\\"time_in.valid\\\" [class.red-icon]=\\\"time_in.invalid && time_in.touched\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <input name=\\\"time_in\\\" #time_in=\\\"ngModel\\\" [(ngModel)]=\\\"timeService.timeFormData.time_in\\\" class=\\\"form-control\\\" placeholder=\\\"Employee Start Time\\\" required>\\r\\n            </div>\\r\\n            <!-- time_out Form Input -->\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                    <div class=\\\"input-group-text bg-white\\\">\\r\\n                        <!-- **Find icon here** -->\\r\\n                        <i class=\\\"far fa-clock\\\" [class.green-icon]=\\\"time_out.valid\\\" [class.red-icon]=\\\"time_out.invalid && time_out.touched\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <input name=\\\"time_out\\\" #time_out=\\\"ngModel\\\" [(ngModel)]=\\\"timeService.timeFormData.time_out\\\" class=\\\"form-control\\\" placeholder=\\\"Employee End Time\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fas fa-database\\\"></i> Submit</button>\\r\\n    </div>\\r\\n</form>\";","export default \"<p>user works!</p>\\r\\n\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","import { Component } from '@angular/core';\r\nimport { EmployeeInfo } from './models/employee-info.model';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from './services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\ncurrentEmployee: EmployeeInfo;\r\n\r\nconstructor(\r\n  private router: Router,\r\n  private authenticationService: AuthenticationService\r\n) {\r\n  this.authenticationService.currentEmployee.subscribe(x => this.currentEmployee = x);\r\n}\r\n\r\nlogout() {\r\n  this.authenticationService.logout();\r\n  this.router.navigate(['/login']);\r\n}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { EmployeesInfoComponent } from './employees-info/employees-info.component';\r\nimport { EmployeeInfoComponent } from './employees-info/employee-info/employee-info.component';\r\nimport { EmployeeInfoListComponent } from './employees-info/employee-info-list/employee-info-list.component';\r\nimport { EmployeeInfoService } from './services/employee-info.service';\r\nimport { TimeTrackService } from './services/time-track.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { appRoutingModule } from './app.routing';\r\n\r\n \r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { TimeTrackingComponent } from './time-tracking/time-tracking.component';\r\nimport { TimeTrackingListComponent } from './time-tracking/time-tracking-list/time-tracking-list.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { AuthInterceptor } from './helpers/auth.interceptor';\r\nimport { ErrorInterceptor } from './helpers/error.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EmployeesInfoComponent,\r\n    EmployeeInfoComponent,\r\n    EmployeeInfoListComponent,\r\n    TimeTrackingComponent,\r\n    TimeTrackingListComponent,\r\n    LoginComponent,\r\n    UserComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot(),\r\n    appRoutingModule\r\n  ],\r\n  providers: [EmployeeInfoService, TimeTrackService, { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }, { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","﻿import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EmployeesInfoComponent } from './employees-info/employees-info.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthGuard } from './helpers/auth.guard';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: EmployeesInfoComponent, canActivate: [AuthGuard] },\r\n    { path: 'login', component: LoginComponent },\r\n\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: '' }\r\n];\r\n\r\nexport const appRoutingModule = RouterModule.forRoot(routes);","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy1pbmZvL2VtcGxveWVlLWluZm8tbGlzdC9lbXBsb3llZS1pbmZvLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\";","import { EmployeeInfoService } from '../../services/employee-info.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Component({\r\n  selector: 'app-employee-info-list',\r\n  templateUrl: './employee-info-list.component.html',\r\n  styleUrls: ['./employee-info-list.component.css']\r\n})\r\nexport class EmployeeInfoListComponent implements OnInit {\r\n\r\n  constructor(public service: EmployeeInfoService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.service.refreshList();\r\n  }\r\n\r\n  populateForm(selectedRecord) {\r\n    this.service.formData = Object.assign({}, selectedRecord);\r\n  }\r\n\r\n  onDelete(id_num) {\r\n    if (confirm('Are you sure to delete this employee record?')) {\r\n      this.service.deleteEmployeeInfo(id_num)\r\n        .subscribe(res => {\r\n          this.toastr.info('Successfuly Deleted', 'Employee Successfuly Deleted');\r\n          this.service.refreshList();\r\n        },\r\n        err => { console.log(err); })\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy1pbmZvL2VtcGxveWVlLWluZm8vZW1wbG95ZWUtaW5mby5jb21wb25lbnQuY3NzIn0= */\";","import { EmployeeInfoService } from '../../services/employee-info.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Component({\r\n  selector: 'app-employee-info',\r\n  templateUrl: './employee-info.component.html',\r\n  styleUrls: ['./employee-info.component.css']\r\n})\r\nexport class EmployeeInfoComponent implements OnInit {\r\n\r\n  constructor(private service: EmployeeInfoService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    this.resetForm();\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    if (this.service.formData.id_num == 0)\r\n      this.insertRecord(form);\r\n    else\r\n      this.updateRecord(form);\r\n  }\r\n  \r\n  updateRecord(form: NgForm) {\r\n    this.service.putEmployeeInfo().subscribe(\r\n      res => {\r\n        this.resetForm(form);\r\n        this.toastr.info('Submitted successfully', 'Employee Info Register');\r\n        this.service.refreshList();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        //console.log(err.message);\r\n      }\r\n    )\r\n  }\r\n\r\n  insertRecord(form: NgForm) {\r\n    this.service.postEmployeeInfo().subscribe(\r\n      res => {\r\n        this.resetForm(form);\r\n        this.service.refreshList();\r\n      },\r\n      err => { \r\n        console.log(err); \r\n        //console.log(err.message);\r\n      }\r\n    )\r\n  }\r\n  \r\n  resetForm(form?: NgForm) {\r\n    if (form != null)\r\n      form.form.reset();\r\n    this.service.formData = {\r\n      id_num: 0,\r\n      username: '',\r\n      password: '',\r\n      first_name: '',\r\n      last_name: '',\r\n      user_privileges: ''\r\n    }\r\n  }  \r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy1pbmZvL2VtcGxveWVlcy1pbmZvLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-employees-info',\r\n  templateUrl: './employees-info.component.html',\r\n  styleUrls: ['./employees-info.component.css']\r\n})\r\nexport class EmployeesInfoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with basic auth credentials if available\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser && currentUser.authdata) {\r\n            request = request.clone({\r\n                setHeaders: { \r\n                    Authorization: `Basic ${currentUser.authdata}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authenticationService.logout();\r\n                location.reload(true);\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router } from '@angular/router';\r\nimport { ActivatedRoute } from '@angular/router';  \r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n    returnUrl: string;\r\n    error = '';\r\n  \r\n  constructor(private toastr: ToastrService, private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService) { \r\n    if (this.authenticationService.currentUserValue) { \r\n      this.router.navigate(['/']);\r\n  }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n        username: ['', Validators.required],\r\n        password: ['', Validators.required]\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  get formInput() { return this.loginForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n        return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.authenticationService.login(this.formInput.username.value, this.formInput.password.value)\r\n        .pipe(first())\r\n        .subscribe(\r\n            data => {\r\n                this.router.navigate([this.returnUrl]);\r\n            },\r\n            error => {\r\n                this.error = error;\r\n                this.loading = false;\r\n            });\r\n  }\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { EmployeeInfo } from '../models/employee-info.model';\r\nimport { EmployeeInfoService } from './employee-info.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    private currentEmployeeSubject: BehaviorSubject<EmployeeInfo>;\r\n    public currentEmployee: Observable<EmployeeInfo>;\r\n\r\n    constructor(private http: HttpClient, public service: EmployeeInfoService) {\r\n        this.currentEmployeeSubject = new BehaviorSubject<EmployeeInfo>(JSON.parse(localStorage.getItem('currentEmployee')));\r\n        this.currentEmployee = this.currentEmployeeSubject.asObservable();\r\n    }\r\n\r\n    public get currentUserValue(): EmployeeInfo {\r\n        return this.currentEmployeeSubject.value;\r\n    }\r\n\r\n    login(username: string, password: string) {\r\n        return this.http.post<any>(`${this.service.rootURL}/EmployeeInfo/authenticate`, { username, password })\r\n            .pipe(map(user => {\r\n                // store user details and basic auth credentials in local storage to keep user logged in between page refreshes\r\n                user.authdata = window.btoa(username + ':' + password);\r\n                localStorage.setItem('currentEmployee', JSON.stringify(user));\r\n                this.currentEmployeeSubject.next(user);\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('currentEmployee');\r\n        this.currentEmployeeSubject.next(null);\r\n    }\r\n}","import { EmployeeInfo } from '../models/employee-info.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { TimeTrack } from '../models/time-track.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeInfoService {\r\n  formData: EmployeeInfo;\r\n  timeFormData: TimeTrack;\r\n  readonly rootURL = 'http://localhost:5040/api';\r\n  list : EmployeeInfo[];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll() {\r\n    return this.http.get<EmployeeInfo[]>(this.rootURL + '/EmployeeInfo');\r\n  }\r\n  postEmployeeInfo() {\r\n    return this.http.post(this.rootURL + '/EmployeeInfo', this.formData);\r\n  }\r\n  putEmployeeInfo() {\r\n    return this.http.put(this.rootURL + '/EmployeeInfo/'+ this.formData.id_num, this.formData);\r\n  }\r\n  deleteEmployeeInfo(id) {\r\n    return this.http.delete(this.rootURL + '/EmployeeInfo/'+ id);\r\n  }\r\n  refreshList(){\r\n    this.http.get(this.rootURL + '/EmployeeInfo')\r\n    .toPromise()\r\n    .then(res => this.list = res as EmployeeInfo[]);\r\n  }\r\n}\r\n","import { EmployeeInfo } from '../models/employee-info.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { TimeTrack } from '../models/time-track.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TimeTrackService {\r\n  timeFormData: TimeTrack;\r\n  readonly rootURL = 'http://localhost:5040/api';\r\n  timeList: TimeTrack[];\r\n\r\n  constructor(private http: HttpClient) { }\r\n  \r\n  postTimeTracking() {\r\n    return this.http.post(this.rootURL + '/TimeTracking', this.timeFormData);\r\n  }\r\n  putTimeTracking() {\r\n    return this.http.put(this.rootURL + '/TimeTracking/'+ this.timeFormData.timer_id, this.timeFormData);\r\n  }\r\n  deleteTimeTracking(time_id) {\r\n    return this.http.delete(this.rootURL + '/TimeTracking/'+ time_id);\r\n  }\r\n\r\n  refreshTimeList(){\r\n    this.http.get(this.rootURL + '/TimeTracking')\r\n    .toPromise()\r\n    .then(res => this.timeList = res as TimeTrack[]);\r\n  }\r\n\r\n\r\n  \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RpbWUtdHJhY2tpbmcvdGltZS10cmFja2luZy1saXN0L3RpbWUtdHJhY2tpbmctbGlzdC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { TimeTrackService } from '../../services/time-track.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Component({\r\n  selector: 'app-time-tracking-list',\r\n  templateUrl: './time-tracking-list.component.html',\r\n  styleUrls: ['./time-tracking-list.component.css']\r\n})\r\nexport class TimeTrackingListComponent implements OnInit {\r\n\r\n  constructor(public timeService: TimeTrackService, private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.timeService.refreshTimeList();\r\n  }\r\n\r\n  populateForm(selectedRecord) {\r\n    this.timeService.timeFormData = Object.assign({}, selectedRecord);\r\n  }\r\n\r\n  onDelete(timer_id) {\r\n    if (confirm('Are you sure to delete this time track record?')) {\r\n      this.timeService.deleteTimeTracking(timer_id)\r\n        .subscribe(res => {\r\n          this.toastr.info('Record with ID: ' + timer_id + ' successfuly deleted.', 'Success');\r\n          this.timeService.refreshTimeList();\r\n        },\r\n        err => { console.log(err.message); })\r\n    }\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RpbWUtdHJhY2tpbmcvdGltZS10cmFja2luZy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { NgForm, FormControl } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TimeTrackService } from '../services/time-track.service';\r\nimport { formatDate } from '@angular/common';\r\nimport { EmployeeInfoService} from '../services/employee-info.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-time-tracking',\r\n  templateUrl: './time-tracking.component.html',\r\n  styleUrls: ['./time-tracking.component.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\n\r\nexport class TimeTrackingComponent implements OnInit {\r\n  today = new Date();\r\n  date  =  new  FormControl(new  Date());\r\n\r\n\r\n  constructor(private timeService: TimeTrackService, private toastr: ToastrService, public service: EmployeeInfoService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.resetForm();\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    if (this.timeService.timeFormData.timer_id == 0) {\r\n      this.insertRecord(form);\r\n    }\r\n    else {\r\n      this.updateRecord(form);\r\n    }\r\n    this.resetForm();\r\n  }\r\n  \r\n  updateRecord(form: NgForm) {\r\n    this.timeService.putTimeTracking().subscribe(\r\n      res => {\r\n        this.resetForm(form);\r\n        this.toastr.info('Submitted successfully', 'Time Tracking Register');\r\n        this.timeService.refreshTimeList();\r\n      },\r\n      err => {\r\n        //console.log(err);\r\n        console.log(err.message);\r\n      }\r\n    )\r\n  }\r\n\r\n  insertRecord(form: NgForm) {\r\n    this.timeService.postTimeTracking().subscribe(\r\n      res => {\r\n        this.resetForm(form);\r\n        this.timeService.refreshTimeList();\r\n      },\r\n      err => { \r\n        this.toastr.error('User ID is not correct, please enter a valid one.', 'Error')\r\n      }\r\n    )\r\n  }\r\n  \r\n  resetForm(form?: NgForm) {\r\n    if (form != null)\r\n      form.form.reset();\r\n    this.timeService.timeFormData = {\r\n      timer_id: 0,\r\n      employee_init_id: 0,\r\n      date_of_work: formatDate(new Date(), 'yyyy-MM-dd', 'en'),\r\n      time_in: formatDate(this.today, 'HH:mm:ss', 'en-US'),\r\n      time_out: formatDate(this.today, 'HH:mm:ss', 'en-US', '+1000'),\r\n        }\r\n  }  \r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:5040'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}