{"ast":null,"code":"import _classCallCheck from \"C:/Users/lgrubisic/Documents/projects/employee-time-tracker/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\nimport * as ɵngcc0 from '@angular/core';\nvar _c0 = [\"*\", [[\"mat-card-footer\"]]];\nvar _c1 = [\"*\", \"mat-card-footer\"];\nvar _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nvar _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nvar _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nvar _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\n\nvar MatCardContent =\n/** @class */\nfunction () {\n  var MatCardContent = function MatCardContent() {\n    _classCallCheck(this, MatCardContent);\n  };\n\n  MatCardContent.ɵfac = function MatCardContent_Factory(t) {\n    return new (t || MatCardContent)();\n  };\n\n  MatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: MatCardContent,\n    selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]],\n    hostAttrs: [1, \"mat-card-content\"]\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n      type: Directive,\n      args: [{\n        selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n        host: {\n          'class': 'mat-card-content'\n        }\n      }]\n    }], null, null);\n  })();\n\n  return MatCardContent;\n}();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\n\nvar MatCardTitle =\n/** @class */\nfunction () {\n  var MatCardTitle = function MatCardTitle() {\n    _classCallCheck(this, MatCardTitle);\n  };\n\n  MatCardTitle.ɵfac = function MatCardTitle_Factory(t) {\n    return new (t || MatCardTitle)();\n  };\n\n  MatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: MatCardTitle,\n    selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]],\n    hostAttrs: [1, \"mat-card-title\"]\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n      type: Directive,\n      args: [{\n        selector: \"mat-card-title, [mat-card-title], [matCardTitle]\",\n        host: {\n          'class': 'mat-card-title'\n        }\n      }]\n    }], null, null);\n  })();\n\n  return MatCardTitle;\n}();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\n\nvar MatCardSubtitle =\n/** @class */\nfunction () {\n  var MatCardSubtitle = function MatCardSubtitle() {\n    _classCallCheck(this, MatCardSubtitle);\n  };\n\n  MatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) {\n    return new (t || MatCardSubtitle)();\n  };\n\n  MatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: MatCardSubtitle,\n    selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]],\n    hostAttrs: [1, \"mat-card-subtitle\"]\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n      type: Directive,\n      args: [{\n        selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\",\n        host: {\n          'class': 'mat-card-subtitle'\n        }\n      }]\n    }], null, null);\n  })();\n\n  return MatCardSubtitle;\n}();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\n\nvar MatCardActions =\n/** @class */\nfunction () {\n  var MatCardActions = function MatCardActions() {\n    _classCallCheck(this, MatCardActions);\n\n    /** Position of the actions inside the card. */\n    this.align = 'start';\n  };\n\n  MatCardActions.ɵfac = function MatCardActions_Factory(t) {\n    return new (t || MatCardActions)();\n  };\n\n  MatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: MatCardActions,\n    selectors: [[\"mat-card-actions\"]],\n    hostAttrs: [1, \"mat-card-actions\"],\n    hostVars: 2,\n    hostBindings: function MatCardActions_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n      }\n    },\n    inputs: {\n      align: \"align\"\n    },\n    exportAs: [\"matCardActions\"]\n  });\n  MatCardActions.propDecorators = {\n    align: [{\n      type: Input\n    }]\n  };\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n      type: Directive,\n      args: [{\n        selector: 'mat-card-actions',\n        exportAs: 'matCardActions',\n        host: {\n          'class': 'mat-card-actions',\n          '[class.mat-card-actions-align-end]': 'align === \"end\"'\n        }\n      }]\n    }], function () {\n      return [];\n    }, {\n      align: [{\n        type: Input\n      }]\n    });\n  })();\n\n  return MatCardActions;\n}();\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n\n\nvar MatCardFooter =\n/** @class */\nfunction () {\n  var MatCardFooter = function MatCardFooter() {\n    _classCallCheck(this, MatCardFooter);\n  };\n\n  MatCardFooter.ɵfac = function MatCardFooter_Factory(t) {\n    return new (t || MatCardFooter)();\n  };\n\n  MatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: MatCardFooter,\n    selectors: [[\"mat-card-footer\"]],\n    hostAttrs: [1, \"mat-card-footer\"]\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n      type: Directive,\n      args: [{\n        selector: 'mat-card-footer',\n        host: {\n          'class': 'mat-card-footer'\n        }\n      }]\n    }], null, null);\n  })();\n\n  return MatCardFooter;\n}();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\n\nvar MatCardImage =\n/** @class */\nfunction () {\n  var MatCardImage = function MatCardImage() {\n    _classCallCheck(this, MatCardImage);\n  };\n\n  MatCardImage.ɵfac = function MatCardImage_Factory(t) {\n    return new (t || MatCardImage)();\n  };\n\n  MatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: MatCardImage,\n    selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]],\n    hostAttrs: [1, \"mat-card-image\"]\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n      type: Directive,\n      args: [{\n        selector: '[mat-card-image], [matCardImage]',\n        host: {\n          'class': 'mat-card-image'\n        }\n      }]\n    }], null, null);\n  })();\n\n  return MatCardImage;\n}();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\n\nvar MatCardSmImage =\n/** @class */\nfunction () {\n  var MatCardSmImage = function MatCardSmImage() {\n    _classCallCheck(this, MatCardSmImage);\n  };\n\n  MatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) {\n    return new (t || MatCardSmImage)();\n  };\n\n  MatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: MatCardSmImage,\n    selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]],\n    hostAttrs: [1, \"mat-card-sm-image\"]\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n      type: Directive,\n      args: [{\n        selector: '[mat-card-sm-image], [matCardImageSmall]',\n        host: {\n          'class': 'mat-card-sm-image'\n        }\n      }]\n    }], null, null);\n  })();\n\n  return MatCardSmImage;\n}();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\n\nvar MatCardMdImage =\n/** @class */\nfunction () {\n  var MatCardMdImage = function MatCardMdImage() {\n    _classCallCheck(this, MatCardMdImage);\n  };\n\n  MatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) {\n    return new (t || MatCardMdImage)();\n  };\n\n  MatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: MatCardMdImage,\n    selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]],\n    hostAttrs: [1, \"mat-card-md-image\"]\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n      type: Directive,\n      args: [{\n        selector: '[mat-card-md-image], [matCardImageMedium]',\n        host: {\n          'class': 'mat-card-md-image'\n        }\n      }]\n    }], null, null);\n  })();\n\n  return MatCardMdImage;\n}();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\n\nvar MatCardLgImage =\n/** @class */\nfunction () {\n  var MatCardLgImage = function MatCardLgImage() {\n    _classCallCheck(this, MatCardLgImage);\n  };\n\n  MatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) {\n    return new (t || MatCardLgImage)();\n  };\n\n  MatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: MatCardLgImage,\n    selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]],\n    hostAttrs: [1, \"mat-card-lg-image\"]\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n      type: Directive,\n      args: [{\n        selector: '[mat-card-lg-image], [matCardImageLarge]',\n        host: {\n          'class': 'mat-card-lg-image'\n        }\n      }]\n    }], null, null);\n  })();\n\n  return MatCardLgImage;\n}();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\n\nvar MatCardXlImage =\n/** @class */\nfunction () {\n  var MatCardXlImage = function MatCardXlImage() {\n    _classCallCheck(this, MatCardXlImage);\n  };\n\n  MatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) {\n    return new (t || MatCardXlImage)();\n  };\n\n  MatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: MatCardXlImage,\n    selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]],\n    hostAttrs: [1, \"mat-card-xl-image\"]\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n      type: Directive,\n      args: [{\n        selector: '[mat-card-xl-image], [matCardImageXLarge]',\n        host: {\n          'class': 'mat-card-xl-image'\n        }\n      }]\n    }], null, null);\n  })();\n\n  return MatCardXlImage;\n}();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n\n\nvar MatCardAvatar =\n/** @class */\nfunction () {\n  var MatCardAvatar = function MatCardAvatar() {\n    _classCallCheck(this, MatCardAvatar);\n  };\n\n  MatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) {\n    return new (t || MatCardAvatar)();\n  };\n\n  MatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: MatCardAvatar,\n    selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]],\n    hostAttrs: [1, \"mat-card-avatar\"]\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n      type: Directive,\n      args: [{\n        selector: '[mat-card-avatar], [matCardAvatar]',\n        host: {\n          'class': 'mat-card-avatar'\n        }\n      }]\n    }], null, null);\n  })();\n\n  return MatCardAvatar;\n}();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\n\n\nvar MatCard =\n/** @class */\nfunction () {\n  var MatCard = // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n  function MatCard(_animationMode) {\n    _classCallCheck(this, MatCard);\n\n    this._animationMode = _animationMode;\n  };\n\n  MatCard.ɵfac = function MatCard_Factory(t) {\n    return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n  };\n\n  MatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: MatCard,\n    selectors: [[\"mat-card\"]],\n    hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"],\n    hostVars: 2,\n    hostBindings: function MatCard_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      }\n    },\n    exportAs: [\"matCard\"],\n    ngContentSelectors: _c1,\n    decls: 2,\n    vars: 0,\n    template: function MatCard_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n      }\n    },\n    styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  MatCard.ctorParameters = function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  };\n  /*@__PURE__*/\n\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(MatCard, [{\n      type: Component,\n      args: [{\n        selector: 'mat-card',\n        exportAs: 'matCard',\n        template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n        encapsulation: ViewEncapsulation.None,\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        host: {\n          'class': 'mat-card mat-focus-indicator',\n          '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n        },\n        styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n      }]\n    }], function () {\n      return [{\n        type: String,\n        decorators: [{\n          type: Optional\n        }, {\n          type: Inject,\n          args: [ANIMATION_MODULE_TYPE]\n        }]\n      }];\n    }, null);\n  })();\n\n  return MatCard;\n}();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\n\n\nvar MatCardHeader =\n/** @class */\nfunction () {\n  var MatCardHeader = function MatCardHeader() {\n    _classCallCheck(this, MatCardHeader);\n  };\n\n  MatCardHeader.ɵfac = function MatCardHeader_Factory(t) {\n    return new (t || MatCardHeader)();\n  };\n\n  MatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: MatCardHeader,\n    selectors: [[\"mat-card-header\"]],\n    hostAttrs: [1, \"mat-card-header\"],\n    ngContentSelectors: _c3,\n    decls: 4,\n    vars: 0,\n    consts: [[1, \"mat-card-header-text\"]],\n    template: function MatCardHeader_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n      type: Component,\n      args: [{\n        selector: 'mat-card-header',\n        template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n        encapsulation: ViewEncapsulation.None,\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        host: {\n          'class': 'mat-card-header'\n        }\n      }]\n    }], null, null);\n  })();\n\n  return MatCardHeader;\n}();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\n\n\nvar MatCardTitleGroup =\n/** @class */\nfunction () {\n  var MatCardTitleGroup = function MatCardTitleGroup() {\n    _classCallCheck(this, MatCardTitleGroup);\n  };\n\n  MatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) {\n    return new (t || MatCardTitleGroup)();\n  };\n\n  MatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: MatCardTitleGroup,\n    selectors: [[\"mat-card-title-group\"]],\n    hostAttrs: [1, \"mat-card-title-group\"],\n    ngContentSelectors: _c5,\n    decls: 4,\n    vars: 0,\n    template: function MatCardTitleGroup_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n      type: Component,\n      args: [{\n        selector: 'mat-card-title-group',\n        template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n        encapsulation: ViewEncapsulation.None,\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        host: {\n          'class': 'mat-card-title-group'\n        }\n      }]\n    }], null, null);\n  })();\n\n  return MatCardTitleGroup;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatCardModule =\n/** @class */\nfunction () {\n  var MatCardModule = function MatCardModule() {\n    _classCallCheck(this, MatCardModule);\n  };\n\n  MatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: MatCardModule\n  });\n  MatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    factory: function MatCardModule_Factory(t) {\n      return new (t || MatCardModule)();\n    },\n    imports: [[MatCommonModule], MatCommonModule]\n  });\n\n  (function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, {\n      declarations: function declarations() {\n        return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar];\n      },\n      imports: function imports() {\n        return [MatCommonModule];\n      },\n      exports: function exports() {\n        return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule];\n      }\n    });\n  })();\n  /*@__PURE__*/\n\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n      type: NgModule,\n      args: [{\n        imports: [MatCommonModule],\n        exports: [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule],\n        declarations: [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar]\n      }]\n    }], null, null);\n  })();\n\n  return MatCardModule;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };","map":{"version":3,"sources":["../../../../../../src/material/card/card.ts","../../../../../../src/material/card/card-module.ts","../../../../../../src/material/card/public-api.ts","../../../../../../src/material/card/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Directive,\n  Input,\n  Optional,\n  Inject,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n  host: {'class': 'mat-card-content'}\n})\nexport class MatCardContent {}\n\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n  host: {\n    'class': 'mat-card-title'\n  }\n})\nexport class MatCardTitle {}\n\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n  host: {\n    'class': 'mat-card-subtitle'\n  }\n})\nexport class MatCardSubtitle {}\n\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-actions',\n  exportAs: 'matCardActions',\n  host: {\n    'class': 'mat-card-actions',\n    '[class.mat-card-actions-align-end]': 'align === \"end\"',\n  }\n})\nexport class MatCardActions {\n  /** Position of the actions inside the card. */\n  @Input() align: 'start' | 'end' = 'start';\n}\n\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-footer',\n  host: {'class': 'mat-card-footer'}\n})\nexport class MatCardFooter {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-image], [matCardImage]',\n  host: {'class': 'mat-card-image'}\n})\nexport class MatCardImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-sm-image], [matCardImageSmall]',\n  host: {'class': 'mat-card-sm-image'}\n})\nexport class MatCardSmImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-md-image], [matCardImageMedium]',\n  host: {'class': 'mat-card-md-image'}\n})\nexport class MatCardMdImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-lg-image], [matCardImageLarge]',\n  host: {'class': 'mat-card-lg-image'}\n})\nexport class MatCardLgImage {}\n\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-xl-image], [matCardImageXLarge]',\n  host: {'class': 'mat-card-xl-image'}\n})\nexport class MatCardXlImage {}\n\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-avatar], [matCardAvatar]',\n  host: {'class': 'mat-card-avatar'}\n})\nexport class MatCardAvatar {}\n\n\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\n@Component({\n  selector: 'mat-card',\n  exportAs: 'matCard',\n  templateUrl: 'card.html',\n  styleUrls: ['card.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-card mat-focus-indicator',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  }\n})\nexport class MatCard {\n  // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n  constructor(@Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {}\n}\n\n\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\n@Component({\n  selector: 'mat-card-header',\n  templateUrl: 'card-header.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card-header'}\n})\nexport class MatCardHeader {}\n\n\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\n@Component({\n  selector: 'mat-card-title-group',\n  templateUrl: 'card-title-group.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card-title-group'}\n})\nexport class MatCardTitleGroup {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {\n  MatCard,\n  MatCardActions,\n  MatCardAvatar,\n  MatCardContent,\n  MatCardFooter,\n  MatCardHeader,\n  MatCardImage,\n  MatCardLgImage,\n  MatCardMdImage,\n  MatCardSmImage,\n  MatCardSubtitle,\n  MatCardTitle,\n  MatCardTitleGroup,\n  MatCardXlImage,\n} from './card';\n\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [\n    MatCard,\n    MatCardHeader,\n    MatCardTitleGroup,\n    MatCardContent,\n    MatCardTitle,\n    MatCardSubtitle,\n    MatCardActions,\n    MatCardFooter,\n    MatCardSmImage,\n    MatCardMdImage,\n    MatCardLgImage,\n    MatCardImage,\n    MatCardXlImage,\n    MatCardAvatar,\n    MatCommonModule,\n  ],\n  declarations: [\n    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n    MatCardXlImage, MatCardAvatar,\n  ],\n})\nexport class MatCardModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './card';\nexport * from './card-module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}