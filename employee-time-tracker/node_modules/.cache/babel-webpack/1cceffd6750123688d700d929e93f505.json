{"ast":null,"code":"import { map } from './map';\nexport function pluck() {\n  for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {\n    properties[_key] = arguments[_key];\n  }\n\n  var length = properties.length;\n\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n\n  return function (source) {\n    return map(plucker(properties, length))(source);\n  };\n}\n\nfunction plucker(props, length) {\n  var mapper = function mapper(x) {\n    var currentProp = x;\n\n    for (var i = 0; i < length; i++) {\n      var p = currentProp != null ? currentProp[props[i]] : undefined;\n\n      if (p !== void 0) {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n\n    return currentProp;\n  };\n\n  return mapper;\n}","map":{"version":3,"sources":["../../../src/internal/operators/pluck.ts"],"names":[],"mappings":"AACA,SAAS,GAAT,QAAoB,OAApB;AA6CA,OAAM,SAAU,KAAV,GAA6C;AAAA,oCAApB,UAAoB;AAApB,IAAA,UAAoB;AAAA;;AACjD,MAAM,MAAM,GAAG,UAAU,CAAC,MAA1B;;AACA,MAAI,MAAM,KAAK,CAAf,EAAkB;AAChB,UAAM,IAAI,KAAJ,CAAU,qCAAV,CAAN;AACD;;AACD,SAAO,UAAC,MAAD;AAAA,WAA2B,GAAG,CAAC,OAAO,CAAC,UAAD,EAAa,MAAb,CAAR,CAAH,CAAiC,MAAjC,CAA3B;AAAA,GAAP;AACD;;AAED,SAAS,OAAT,CAAiB,KAAjB,EAAkC,MAAlC,EAAgD;AAC9C,MAAM,MAAM,GAAG,SAAT,MAAS,CAAC,CAAD,EAAc;AAC3B,QAAI,WAAW,GAAG,CAAlB;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAApB,EAA4B,CAAC,EAA7B,EAAiC;AAC/B,UAAM,CAAC,GAAG,WAAW,IAAI,IAAf,GAAsB,WAAW,CAAC,KAAK,CAAC,CAAD,CAAN,CAAjC,GAA8C,SAAxD;;AACA,UAAI,CAAC,KAAK,KAAK,CAAf,EAAkB;AAChB,QAAA,WAAW,GAAG,CAAd;AACD,OAFD,MAEO;AACL,eAAO,SAAP;AACD;AACF;;AACD,WAAO,WAAP;AACD,GAXD;;AAaA,SAAO,MAAP;AACD","sourcesContent":["import { map } from './map';\r\nexport function pluck(...properties) {\r\n    const length = properties.length;\r\n    if (length === 0) {\r\n        throw new Error('list of properties cannot be empty.');\r\n    }\r\n    return (source) => map(plucker(properties, length))(source);\r\n}\r\nfunction plucker(props, length) {\r\n    const mapper = (x) => {\r\n        let currentProp = x;\r\n        for (let i = 0; i < length; i++) {\r\n            const p = currentProp != null ? currentProp[props[i]] : undefined;\r\n            if (p !== void 0) {\r\n                currentProp = p;\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n        return currentProp;\r\n    };\r\n    return mapper;\r\n}\r\n//# sourceMappingURL=pluck.js.map"]},"metadata":{},"sourceType":"module"}