{"ast":null,"code":"import _classCallCheck from \"C:/Users/imarusic/Desktop/test2/projects/employee-time-tracker/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/imarusic/Desktop/test2/projects/employee-time-tracker/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/imarusic/Desktop/test2/projects/employee-time-tracker/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/imarusic/Desktop/test2/projects/employee-time-tracker/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\nexport var SubscribeOnObservable = /*#__PURE__*/function (_Observable) {\n  _inherits(SubscribeOnObservable, _Observable);\n\n  var _super = _createSuper(SubscribeOnObservable);\n\n  function SubscribeOnObservable(source) {\n    var _this;\n\n    var delayTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var scheduler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : asap;\n\n    _classCallCheck(this, SubscribeOnObservable);\n\n    _this = _super.call(this);\n    _this.source = source;\n    _this.delayTime = delayTime;\n    _this.scheduler = scheduler;\n\n    if (!isNumeric(delayTime) || delayTime < 0) {\n      _this.delayTime = 0;\n    }\n\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      _this.scheduler = asap;\n    }\n\n    return _this;\n  }\n\n  _createClass(SubscribeOnObservable, [{\n    key: \"_subscribe\",\n    value: function _subscribe(subscriber) {\n      var delay = this.delayTime;\n      var source = this.source;\n      var scheduler = this.scheduler;\n      return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n        source: source,\n        subscriber: subscriber\n      });\n    }\n  }], [{\n    key: \"create\",\n    value: function create(source) {\n      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var scheduler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : asap;\n      return new SubscribeOnObservable(source, delay, scheduler);\n    }\n  }, {\n    key: \"dispatch\",\n    value: function dispatch(arg) {\n      var source = arg.source,\n          subscriber = arg.subscriber;\n      return this.add(source.subscribe(subscriber));\n    }\n  }]);\n\n  return SubscribeOnObservable;\n}(Observable);","map":{"version":3,"sources":["../../../src/internal/observable/SubscribeOnObservable.ts"],"names":[],"mappings":";;;;AAGA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,IAAT,QAAqB,mBAArB;AACA,SAAS,SAAT,QAA0B,mBAA1B;AAYA,WAAa,qBAAb;AAAA;;AAAA;;AAYE,iCAAmB,MAAnB,EAEmD;AAAA;;AAAA,QAD/B,SAC+B,uEADX,CACW;AAAA,QAA/B,SAA+B,uEAAJ,IAAI;;AAAA;;AACjD;AAHiB,UAAA,MAAA,GAAA,MAAA;AACC,UAAA,SAAA,GAAA,SAAA;AACA,UAAA,SAAA,GAAA,SAAA;;AAElB,QAAI,CAAC,SAAS,CAAC,SAAD,CAAV,IAAyB,SAAS,GAAG,CAAzC,EAA4C;AAC1C,YAAK,SAAL,GAAiB,CAAjB;AACD;;AACD,QAAI,CAAC,SAAD,IAAc,OAAO,SAAS,CAAC,QAAjB,KAA8B,UAAhD,EAA4D;AAC1D,YAAK,SAAL,GAAiB,IAAjB;AACD;;AAPgD;AAQlD;;AAtBH;AAAA;AAAA,+BAyBa,UAzBb,EAyBsC;AAClC,UAAM,KAAK,GAAG,KAAK,SAAnB;AACA,UAAM,MAAM,GAAG,KAAK,MAApB;AACA,UAAM,SAAS,GAAG,KAAK,SAAvB;AAEA,aAAO,SAAS,CAAC,QAAV,CAAqC,qBAAqB,CAAC,QAA3D,EAAqE,KAArE,EAA4E;AACjF,QAAA,MAAM,EAAN,MADiF;AACzE,QAAA,UAAU,EAAV;AADyE,OAA5E,CAAP;AAGD;AAjCH;AAAA;AAAA,2BAEmB,MAFnB,EAE4F;AAAA,UAAlD,KAAkD,uEAAlC,CAAkC;AAAA,UAA/B,SAA+B,uEAAJ,IAAI;AACxF,aAAO,IAAI,qBAAJ,CAA0B,MAA1B,EAAkC,KAAlC,EAAyC,SAAzC,CAAP;AACD;AAJH;AAAA;AAAA,6BAO+C,GAP/C,EAOkE;AAAA,UACtD,MADsD,GAC/B,GAD+B,CACtD,MADsD;AAAA,UAC9C,UAD8C,GAC/B,GAD+B,CAC9C,UAD8C;AAE9D,aAAO,KAAK,GAAL,CAAS,MAAM,CAAC,SAAP,CAAiB,UAAjB,CAAT,CAAP;AACD;AAVH;;AAAA;AAAA,EAA8C,UAA9C","sourcesContent":["import { Observable } from '../Observable';\r\nimport { asap } from '../scheduler/asap';\r\nimport { isNumeric } from '../util/isNumeric';\r\nexport class SubscribeOnObservable extends Observable {\r\n    constructor(source, delayTime = 0, scheduler = asap) {\r\n        super();\r\n        this.source = source;\r\n        this.delayTime = delayTime;\r\n        this.scheduler = scheduler;\r\n        if (!isNumeric(delayTime) || delayTime < 0) {\r\n            this.delayTime = 0;\r\n        }\r\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\r\n            this.scheduler = asap;\r\n        }\r\n    }\r\n    static create(source, delay = 0, scheduler = asap) {\r\n        return new SubscribeOnObservable(source, delay, scheduler);\r\n    }\r\n    static dispatch(arg) {\r\n        const { source, subscriber } = arg;\r\n        return this.add(source.subscribe(subscriber));\r\n    }\r\n    _subscribe(subscriber) {\r\n        const delay = this.delayTime;\r\n        const source = this.source;\r\n        const scheduler = this.scheduler;\r\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\r\n            source, subscriber\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=SubscribeOnObservable.js.map"]},"metadata":{},"sourceType":"module"}