{"ast":null,"code":"import { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { isScheduler } from '../util/isScheduler';\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n  var resultSelector;\n  var initialState;\n\n  if (arguments.length == 1) {\n    var options = initialStateOrOptions;\n    initialState = options.initialState;\n    condition = options.condition;\n    iterate = options.iterate;\n    resultSelector = options.resultSelector || identity;\n    scheduler = options.scheduler;\n  } else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n    initialState = initialStateOrOptions;\n    resultSelector = identity;\n    scheduler = resultSelectorOrObservable;\n  } else {\n    initialState = initialStateOrOptions;\n    resultSelector = resultSelectorOrObservable;\n  }\n\n  return new Observable(function (subscriber) {\n    var state = initialState;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        subscriber: subscriber,\n        iterate: iterate,\n        condition: condition,\n        resultSelector: resultSelector,\n        state: state\n      });\n    }\n\n    do {\n      if (condition) {\n        var conditionResult = void 0;\n\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return undefined;\n        }\n\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n\n      var value = void 0;\n\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n\n      subscriber.next(value);\n\n      if (subscriber.closed) {\n        break;\n      }\n\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n    } while (true);\n\n    return undefined;\n  });\n}\n\nfunction dispatch(state) {\n  var subscriber = state.subscriber,\n      condition = state.condition;\n\n  if (subscriber.closed) {\n    return undefined;\n  }\n\n  if (state.needIterate) {\n    try {\n      state.state = state.iterate(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n  } else {\n    state.needIterate = true;\n  }\n\n  if (condition) {\n    var conditionResult;\n\n    try {\n      conditionResult = condition(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    if (!conditionResult) {\n      subscriber.complete();\n      return undefined;\n    }\n\n    if (subscriber.closed) {\n      return undefined;\n    }\n  }\n\n  var value;\n\n  try {\n    value = state.resultSelector(state.state);\n  } catch (err) {\n    subscriber.error(err);\n    return undefined;\n  }\n\n  if (subscriber.closed) {\n    return undefined;\n  }\n\n  subscriber.next(value);\n\n  if (subscriber.closed) {\n    return undefined;\n  }\n\n  return this.schedule(state);\n}","map":{"version":3,"sources":["../../../src/internal/observable/generate.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from '../Observable';\r\nimport { identity } from '../util/identity';\r\nimport { isScheduler } from '../util/isScheduler';\r\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\r\n    let resultSelector;\r\n    let initialState;\r\n    if (arguments.length == 1) {\r\n        const options = initialStateOrOptions;\r\n        initialState = options.initialState;\r\n        condition = options.condition;\r\n        iterate = options.iterate;\r\n        resultSelector = options.resultSelector || identity;\r\n        scheduler = options.scheduler;\r\n    }\r\n    else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\r\n        initialState = initialStateOrOptions;\r\n        resultSelector = identity;\r\n        scheduler = resultSelectorOrObservable;\r\n    }\r\n    else {\r\n        initialState = initialStateOrOptions;\r\n        resultSelector = resultSelectorOrObservable;\r\n    }\r\n    return new Observable(subscriber => {\r\n        let state = initialState;\r\n        if (scheduler) {\r\n            return scheduler.schedule(dispatch, 0, {\r\n                subscriber,\r\n                iterate,\r\n                condition,\r\n                resultSelector,\r\n                state\r\n            });\r\n        }\r\n        do {\r\n            if (condition) {\r\n                let conditionResult;\r\n                try {\r\n                    conditionResult = condition(state);\r\n                }\r\n                catch (err) {\r\n                    subscriber.error(err);\r\n                    return undefined;\r\n                }\r\n                if (!conditionResult) {\r\n                    subscriber.complete();\r\n                    break;\r\n                }\r\n            }\r\n            let value;\r\n            try {\r\n                value = resultSelector(state);\r\n            }\r\n            catch (err) {\r\n                subscriber.error(err);\r\n                return undefined;\r\n            }\r\n            subscriber.next(value);\r\n            if (subscriber.closed) {\r\n                break;\r\n            }\r\n            try {\r\n                state = iterate(state);\r\n            }\r\n            catch (err) {\r\n                subscriber.error(err);\r\n                return undefined;\r\n            }\r\n        } while (true);\r\n        return undefined;\r\n    });\r\n}\r\nfunction dispatch(state) {\r\n    const { subscriber, condition } = state;\r\n    if (subscriber.closed) {\r\n        return undefined;\r\n    }\r\n    if (state.needIterate) {\r\n        try {\r\n            state.state = state.iterate(state.state);\r\n        }\r\n        catch (err) {\r\n            subscriber.error(err);\r\n            return undefined;\r\n        }\r\n    }\r\n    else {\r\n        state.needIterate = true;\r\n    }\r\n    if (condition) {\r\n        let conditionResult;\r\n        try {\r\n            conditionResult = condition(state.state);\r\n        }\r\n        catch (err) {\r\n            subscriber.error(err);\r\n            return undefined;\r\n        }\r\n        if (!conditionResult) {\r\n            subscriber.complete();\r\n            return undefined;\r\n        }\r\n        if (subscriber.closed) {\r\n            return undefined;\r\n        }\r\n    }\r\n    let value;\r\n    try {\r\n        value = state.resultSelector(state.state);\r\n    }\r\n    catch (err) {\r\n        subscriber.error(err);\r\n        return undefined;\r\n    }\r\n    if (subscriber.closed) {\r\n        return undefined;\r\n    }\r\n    subscriber.next(value);\r\n    if (subscriber.closed) {\r\n        return undefined;\r\n    }\r\n    return this.schedule(state);\r\n}\r\n//# sourceMappingURL=generate.js.map"]},"metadata":{},"sourceType":"module"}