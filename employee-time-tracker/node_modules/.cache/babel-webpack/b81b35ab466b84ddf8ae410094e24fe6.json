{"ast":null,"code":"import _inherits from \"C:/Users/imarusic/Desktop/test2/projects/employee-time-tracker/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/imarusic/Desktop/test2/projects/employee-time-tracker/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/Users/imarusic/Desktop/test2/projects/employee-time-tracker/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/imarusic/Desktop/test2/projects/employee-time-tracker/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nexport function single(predicate) {\n  return function (source) {\n    return source.lift(new SingleOperator(predicate, source));\n  };\n}\n\nvar SingleOperator = /*#__PURE__*/function () {\n  function SingleOperator(predicate, source) {\n    _classCallCheck(this, SingleOperator);\n\n    this.predicate = predicate;\n    this.source = source;\n  }\n\n  _createClass(SingleOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    }\n  }]);\n\n  return SingleOperator;\n}();\n\nvar SingleSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(SingleSubscriber, _Subscriber);\n\n  var _super = _createSuper(SingleSubscriber);\n\n  function SingleSubscriber(destination, predicate, source) {\n    var _this;\n\n    _classCallCheck(this, SingleSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.predicate = predicate;\n    _this.source = source;\n    _this.seenValue = false;\n    _this.index = 0;\n    return _this;\n  }\n\n  _createClass(SingleSubscriber, [{\n    key: \"applySingleValue\",\n    value: function applySingleValue(value) {\n      if (this.seenValue) {\n        this.destination.error('Sequence contains more than one element');\n      } else {\n        this.seenValue = true;\n        this.singleValue = value;\n      }\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      var index = this.index++;\n\n      if (this.predicate) {\n        this.tryNext(value, index);\n      } else {\n        this.applySingleValue(value);\n      }\n    }\n  }, {\n    key: \"tryNext\",\n    value: function tryNext(value, index) {\n      try {\n        if (this.predicate(value, index, this.source)) {\n          this.applySingleValue(value);\n        }\n      } catch (err) {\n        this.destination.error(err);\n      }\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      var destination = this.destination;\n\n      if (this.index > 0) {\n        destination.next(this.seenValue ? this.singleValue : undefined);\n        destination.complete();\n      } else {\n        destination.error(new EmptyError());\n      }\n    }\n  }]);\n\n  return SingleSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/single.ts"],"names":[],"mappings":";;;;AAEA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,UAAT,QAA2B,oBAA3B;AAkDA,OAAM,SAAU,MAAV,CAAoB,SAApB,EAA2F;AAC/F,SAAO,UAAC,MAAD;AAAA,WAA2B,MAAM,CAAC,IAAP,CAAY,IAAI,cAAJ,CAAmB,SAAnB,EAA8B,MAA9B,CAAZ,CAA3B;AAAA,GAAP;AACD;;IAEK,c;AACJ,0BAAoB,SAApB,EACoB,MADpB,EAC0C;AAAA;;AADtB,SAAA,SAAA,GAAA,SAAA;AACA,SAAA,MAAA,GAAA,MAAA;AACnB;;;;yBAEI,U,EAA2B,M,EAAW;AACzC,aAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,gBAAJ,CAAqB,UAArB,EAAiC,KAAK,SAAtC,EAAiD,KAAK,MAAtD,CAAjB,CAAP;AACD;;;;;;IAQG,gB;;;;;AAKJ,4BAAY,WAAZ,EACoB,SADpB,EAEoB,MAFpB,EAE0C;AAAA;;AAAA;;AACxC,8BAAM,WAAN;AAFkB,UAAA,SAAA,GAAA,SAAA;AACA,UAAA,MAAA,GAAA,MAAA;AANZ,UAAA,SAAA,GAAqB,KAArB;AAEA,UAAA,KAAA,GAAgB,CAAhB;AAIkC;AAEzC;;;;qCAEwB,K,EAAQ;AAC/B,UAAI,KAAK,SAAT,EAAoB;AAClB,aAAK,WAAL,CAAiB,KAAjB,CAAuB,yCAAvB;AACD,OAFD,MAEO;AACL,aAAK,SAAL,GAAiB,IAAjB;AACA,aAAK,WAAL,GAAmB,KAAnB;AACD;AACF;;;0BAEe,K,EAAQ;AACtB,UAAM,KAAK,GAAG,KAAK,KAAL,EAAd;;AAEA,UAAI,KAAK,SAAT,EAAoB;AAClB,aAAK,OAAL,CAAa,KAAb,EAAoB,KAApB;AACD,OAFD,MAEO;AACL,aAAK,gBAAL,CAAsB,KAAtB;AACD;AACF;;;4BAEe,K,EAAU,K,EAAa;AACrC,UAAI;AACF,YAAI,KAAK,SAAL,CAAe,KAAf,EAAsB,KAAtB,EAA6B,KAAK,MAAlC,CAAJ,EAA+C;AAC7C,eAAK,gBAAL,CAAsB,KAAtB;AACD;AACF,OAJD,CAIE,OAAO,GAAP,EAAY;AACZ,aAAK,WAAL,CAAiB,KAAjB,CAAuB,GAAvB;AACD;AACF;;;gCAEkB;AACjB,UAAM,WAAW,GAAG,KAAK,WAAzB;;AAEA,UAAI,KAAK,KAAL,GAAa,CAAjB,EAAoB;AAClB,QAAA,WAAW,CAAC,IAAZ,CAAiB,KAAK,SAAL,GAAiB,KAAK,WAAtB,GAAoC,SAArD;AACA,QAAA,WAAW,CAAC,QAAZ;AACD,OAHD,MAGO;AACL,QAAA,WAAW,CAAC,KAAZ,CAAkB,IAAI,UAAJ,EAAlB;AACD;AACF;;;;EAjD+B,U","sourcesContent":["import { Subscriber } from '../Subscriber';\r\nimport { EmptyError } from '../util/EmptyError';\r\nexport function single(predicate) {\r\n    return (source) => source.lift(new SingleOperator(predicate, source));\r\n}\r\nclass SingleOperator {\r\n    constructor(predicate, source) {\r\n        this.predicate = predicate;\r\n        this.source = source;\r\n    }\r\n    call(subscriber, source) {\r\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\r\n    }\r\n}\r\nclass SingleSubscriber extends Subscriber {\r\n    constructor(destination, predicate, source) {\r\n        super(destination);\r\n        this.predicate = predicate;\r\n        this.source = source;\r\n        this.seenValue = false;\r\n        this.index = 0;\r\n    }\r\n    applySingleValue(value) {\r\n        if (this.seenValue) {\r\n            this.destination.error('Sequence contains more than one element');\r\n        }\r\n        else {\r\n            this.seenValue = true;\r\n            this.singleValue = value;\r\n        }\r\n    }\r\n    _next(value) {\r\n        const index = this.index++;\r\n        if (this.predicate) {\r\n            this.tryNext(value, index);\r\n        }\r\n        else {\r\n            this.applySingleValue(value);\r\n        }\r\n    }\r\n    tryNext(value, index) {\r\n        try {\r\n            if (this.predicate(value, index, this.source)) {\r\n                this.applySingleValue(value);\r\n            }\r\n        }\r\n        catch (err) {\r\n            this.destination.error(err);\r\n        }\r\n    }\r\n    _complete() {\r\n        const destination = this.destination;\r\n        if (this.index > 0) {\r\n            destination.next(this.seenValue ? this.singleValue : undefined);\r\n            destination.complete();\r\n        }\r\n        else {\r\n            destination.error(new EmptyError);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=single.js.map"]},"metadata":{},"sourceType":"module"}