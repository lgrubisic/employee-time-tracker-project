{"ast":null,"code":"import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nexport function scheduled(input, scheduler) {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    } else if (isIterable(input) || typeof input === 'string') {\n      return scheduleIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}","map":{"version":3,"sources":["../../../src/internal/scheduled/scheduled.ts"],"names":[],"mappings":"AAAA,SAAS,kBAAT,QAAmC,sBAAnC;AACA,SAAS,eAAT,QAAgC,mBAAhC;AACA,SAAS,aAAT,QAA8B,iBAA9B;AACA,SAAS,gBAAT,QAAiC,oBAAjC;AAEA,SAAS,mBAAT,QAAoC,6BAApC;AACA,SAAS,SAAT,QAA0B,mBAA1B;AACA,SAAS,WAAT,QAA4B,qBAA5B;AACA,SAAS,UAAT,QAA2B,oBAA3B;AAaA,OAAM,SAAU,SAAV,CAAuB,KAAvB,EAAkD,SAAlD,EAA0E;AAC9E,MAAI,KAAK,IAAI,IAAb,EAAmB;AACjB,QAAI,mBAAmB,CAAC,KAAD,CAAvB,EAAgC;AAC9B,aAAO,kBAAkB,CAAC,KAAD,EAAQ,SAAR,CAAzB;AACD,KAFD,MAEO,IAAI,SAAS,CAAC,KAAD,CAAb,EAAsB;AAC3B,aAAO,eAAe,CAAC,KAAD,EAAQ,SAAR,CAAtB;AACD,KAFM,MAEA,IAAI,WAAW,CAAC,KAAD,CAAf,EAAwB;AAC7B,aAAO,aAAa,CAAC,KAAD,EAAQ,SAAR,CAApB;AACD,KAFM,MAEC,IAAI,UAAU,CAAC,KAAD,CAAV,IAAqB,OAAO,KAAP,KAAiB,QAA1C,EAAoD;AAC1D,aAAO,gBAAgB,CAAC,KAAD,EAAQ,SAAR,CAAvB;AACD;AACF;;AAED,QAAM,IAAI,SAAJ,CAAc,CAAC,KAAK,KAAK,IAAV,IAAkB,OAAO,KAAzB,IAAkC,KAAnC,IAA4C,oBAA1D,CAAN;AACD","sourcesContent":["import { scheduleObservable } from './scheduleObservable';\r\nimport { schedulePromise } from './schedulePromise';\r\nimport { scheduleArray } from './scheduleArray';\r\nimport { scheduleIterable } from './scheduleIterable';\r\nimport { isInteropObservable } from '../util/isInteropObservable';\r\nimport { isPromise } from '../util/isPromise';\r\nimport { isArrayLike } from '../util/isArrayLike';\r\nimport { isIterable } from '../util/isIterable';\r\nexport function scheduled(input, scheduler) {\r\n    if (input != null) {\r\n        if (isInteropObservable(input)) {\r\n            return scheduleObservable(input, scheduler);\r\n        }\r\n        else if (isPromise(input)) {\r\n            return schedulePromise(input, scheduler);\r\n        }\r\n        else if (isArrayLike(input)) {\r\n            return scheduleArray(input, scheduler);\r\n        }\r\n        else if (isIterable(input) || typeof input === 'string') {\r\n            return scheduleIterable(input, scheduler);\r\n        }\r\n    }\r\n    throw new TypeError((input !== null && typeof input || input) + ' is not observable');\r\n}\r\n//# sourceMappingURL=scheduled.js.map"]},"metadata":{},"sourceType":"module"}