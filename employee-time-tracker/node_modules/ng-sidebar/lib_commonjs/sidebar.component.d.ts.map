{"version":3,"file":"sidebar.component.d.ts","sources":["sidebar.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { SidebarContainer } from './sidebar-container.component';\r\nexport declare class Sidebar implements AfterContentInit, OnInit, OnChanges, OnDestroy {\r\n    private _container;\r\n    private _ref;\r\n    opened: boolean;\r\n    openedChange: EventEmitter<boolean>;\r\n    mode: 'over' | 'push' | 'slide';\r\n    dock: boolean;\r\n    dockedSize: string;\r\n    position: 'start' | 'end' | 'left' | 'right' | 'top' | 'bottom';\r\n    animate: boolean;\r\n    autoCollapseHeight: number;\r\n    autoCollapseWidth: number;\r\n    autoCollapseOnInit: boolean;\r\n    sidebarClass: string;\r\n    ariaLabel: string;\r\n    trapFocus: boolean;\r\n    autoFocus: boolean;\r\n    showBackdrop: boolean;\r\n    closeOnClickBackdrop: boolean;\r\n    closeOnClickOutside: boolean;\r\n    keyClose: boolean;\r\n    keyCode: number;\r\n    onContentInit: EventEmitter<null>;\r\n    onOpenStart: EventEmitter<null>;\r\n    onOpened: EventEmitter<null>;\r\n    onCloseStart: EventEmitter<null>;\r\n    onClosed: EventEmitter<null>;\r\n    onTransitionEnd: EventEmitter<null>;\r\n    onModeChange: EventEmitter<string>;\r\n    onPositionChange: EventEmitter<string>;\r\n    _onRerender: EventEmitter<null>;\r\n    _elSidebar: ElementRef;\r\n    private _focusableElementsString;\r\n    private _focusableElements;\r\n    private _focusedBeforeOpen;\r\n    private _tabIndexAttr;\r\n    private _tabIndexIndicatorAttr;\r\n    private _wasCollapsed;\r\n    private _shouldAnimate;\r\n    private _clickEvent;\r\n    private _onClickOutsideAttached;\r\n    private _onKeyDownAttached;\r\n    private _onResizeAttached;\r\n    private _isBrowser;\r\n    constructor(_container: SidebarContainer, _ref: ChangeDetectorRef, platformId: Object);\r\n    ngOnInit(): void;\r\n    ngAfterContentInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n    open(): void;\r\n    close(): void;\r\n    triggerRerender(): void;\r\n    _getStyle(): CSSStyleDeclaration;\r\n    _onTransitionEnd(e: TransitionEvent): void;\r\n    private readonly _shouldTrapFocus;\r\n    private _focusFirstItem;\r\n    private _onFocusTrap;\r\n    private _setFocused;\r\n    private _initCloseListeners;\r\n    private _initCloseClickListener;\r\n    private _initCloseKeyDownListener;\r\n    private _destroyCloseListeners;\r\n    private _destroyCloseClickListener;\r\n    private _destroyCloseKeyDownListener;\r\n    private _onClickOutside;\r\n    private _onKeyDown;\r\n    private _initCollapseListeners;\r\n    private _destroyCollapseListeners;\r\n    private _collapse;\r\n    readonly _height: number;\r\n    readonly _width: number;\r\n    readonly _dockedSize: number;\r\n    readonly _isModeOver: boolean;\r\n    readonly _isModePush: boolean;\r\n    readonly _isModeSlide: boolean;\r\n    readonly _isDocked: boolean;\r\n    readonly _isLeftOrTop: boolean;\r\n    readonly _isLeftOrRight: boolean;\r\n    readonly _isInert: boolean;\r\n    private _normalizePosition;\r\n}\r\n"]}